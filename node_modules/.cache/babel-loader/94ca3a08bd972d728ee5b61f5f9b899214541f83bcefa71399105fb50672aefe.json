{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"training-chart-container\"\n};\nconst _hoisted_2 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"chart-header\"\n};\nconst _hoisted_4 = {\n  class: \"chart-controls\"\n};\nconst _hoisted_5 = [\"disabled\"];\nconst _hoisted_6 = {\n  class: \"btn-icon\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"status-info\"\n};\nconst _hoisted_8 = {\n  class: \"status-card\"\n};\nconst _hoisted_9 = {\n  class: \"card-content\"\n};\nconst _hoisted_10 = {\n  class: \"status-item\"\n};\nconst _hoisted_11 = {\n  class: \"status-item\"\n};\nconst _hoisted_12 = {\n  class: \"status-value\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"status-item\"\n};\nconst _hoisted_14 = {\n  class: \"status-value\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"chart-container\"\n};\nconst _hoisted_16 = {\n  class: \"chart-wrapper\"\n};\nconst _hoisted_17 = {\n  ref: \"chartCanvas\"\n};\nconst _hoisted_18 = {\n  key: 2,\n  class: \"chart-error\"\n};\nconst _hoisted_19 = {\n  key: 3,\n  class: \"no-data\"\n};\nconst _hoisted_20 = {\n  key: 4,\n  class: \"data-table\"\n};\nconst _hoisted_21 = {\n  class: \"table-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 背景装饰 \"), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"background-decoration\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"训练进度监控\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: $setup.refreshData,\n    disabled: $setup.loading,\n    class: \"refresh-btn\"\n  }, [_cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n    class: \"btn-icon\"\n  }, \"🔄\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($setup.loading ? '加载中...' : '刷新数据'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n    onClick: $setup.toggleAutoRefresh,\n    class: _normalizeClass([\"auto-refresh-btn\", {\n      active: $setup.autoRefresh\n    }])\n  }, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.autoRefresh ? '⏹️' : '▶️'), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString($setup.autoRefresh ? '停止自动刷新' : '开始自动刷新'), 1 /* TEXT */)], 2 /* CLASS */)])]), $setup.trainingStatus ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, [_createElementVNode(\"h3\", null, \"📊 训练状态\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"status-label\"\n  }, \"状态:\", -1 /* CACHED */)), _createElementVNode(\"span\", {\n    class: _normalizeClass([\"status-value\", $setup.getStatusClass($setup.trainingStatus.status)])\n  }, _toDisplayString($setup.getStatusText($setup.trainingStatus.status)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_11, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"status-label\"\n  }, \"总轮数:\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($setup.trainingStatus.totalEpochs), 1 /* TEXT */)]), $setup.trainingStatus.lastEpoch ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"status-label\"\n  }, \"最新轮次:\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($setup.trainingStatus.lastEpoch.epoch) + \" (损失: \" + _toDisplayString($setup.trainingStatus.lastEpoch.loss.toFixed(4)) + \", 准确率: \" + _toDisplayString($setup.trainingStatus.lastEpoch.accuracy.toFixed(2)) + \"%) \", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 只有在有数据时才显示图表容器 \"), $setup.trainingData.length > 0 && !$setup.chartError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"canvas\", _hoisted_17, null, 512 /* NEED_PATCH */)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 图表错误提示 \"), $setup.chartError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"error-icon\"\n  }, \"⚠️\", -1 /* CACHED */)), _createElementVNode(\"p\", null, \"图表渲染失败: \" + _toDisplayString($setup.chartError), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.retryChart,\n    class: \"retry-btn\"\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"span\", {\n    class: \"btn-icon\"\n  }, \"🔄\", -1 /* CACHED */), _createTextVNode(\" 重试图表 \")]))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 无数据时显示提示 \"), !$setup.loading && $setup.trainingData.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"no-data-icon\"\n  }, \"📈\", -1 /* CACHED */)), _cache[10] || (_cache[10] = _createElementVNode(\"p\", null, \"暂无训练数据，请等待训练开始或检查后端连接\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    onClick: $setup.refreshData,\n    class: \"retry-btn\"\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"span\", {\n    class: \"btn-icon\"\n  }, \"🔄\", -1 /* CACHED */), _createTextVNode(\" 重试 \")]))])) : _createCommentVNode(\"v-if\", true), $setup.trainingData.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"table-header\"\n  }, [_createElementVNode(\"h3\", null, \"📋 训练数据详情\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"table\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"轮次\"), _createElementVNode(\"th\", null, \"损失值\"), _createElementVNode(\"th\", null, \"准确率 (%)\"), _createElementVNode(\"th\", null, \"学习率\"), _createElementVNode(\"th\", null, \"用时\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.trainingData, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.epoch\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.epoch), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.loss.toFixed(6)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.accuracy.toFixed(2)) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.learningRate.toFixed(6)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.epochTime), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","onClick","$setup","refreshData","disabled","loading","_toDisplayString","toggleAutoRefresh","_normalizeClass","active","autoRefresh","_hoisted_6","trainingStatus","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","getStatusClass","status","getStatusText","_hoisted_11","_hoisted_12","totalEpochs","lastEpoch","_hoisted_13","_hoisted_14","epoch","loss","toFixed","accuracy","trainingData","length","chartError","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","retryChart","_hoisted_19","_hoisted_20","_hoisted_21","_Fragment","_renderList","item","key","learningRate","epochTime"],"sources":["E:\\大三下学习资料\\项目实训\\MPHEDevCombine\\MPHEDevFrontEnd\\ParticipantFrontEnd\\encryption\\src\\views\\TrainingChart.vue"],"sourcesContent":["<template>\n  <div class=\"training-chart-container\">\n    <!-- 背景装饰 -->\n    <div class=\"background-decoration\"></div>\n    \n    <div class=\"content-wrapper\">\n      <div class=\"chart-header\">\n        <h2>训练进度监控</h2>\n        <div class=\"chart-controls\">\n          <button @click=\"refreshData\" :disabled=\"loading\" class=\"refresh-btn\">\n            <span class=\"btn-icon\">🔄</span>\n            {{ loading ? '加载中...' : '刷新数据' }}\n          </button>\n          <button @click=\"toggleAutoRefresh\" class=\"auto-refresh-btn\" :class=\"{ active: autoRefresh }\">\n            <span class=\"btn-icon\">{{ autoRefresh ? '⏹️' : '▶️' }}</span>\n            {{ autoRefresh ? '停止自动刷新' : '开始自动刷新' }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"status-info\" v-if=\"trainingStatus\">\n        <div class=\"status-card\">\n          <div class=\"card-header\">\n            <h3>📊 训练状态</h3>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"status-item\">\n              <span class=\"status-label\">状态:</span>\n              <span class=\"status-value\" :class=\"getStatusClass(trainingStatus.status)\">\n                {{ getStatusText(trainingStatus.status) }}\n              </span>\n            </div>\n            <div class=\"status-item\">\n              <span class=\"status-label\">总轮数:</span>\n              <span class=\"status-value\">{{ trainingStatus.totalEpochs }}</span>\n            </div>\n            <div class=\"status-item\" v-if=\"trainingStatus.lastEpoch\">\n              <span class=\"status-label\">最新轮次:</span>\n              <span class=\"status-value\">\n                {{ trainingStatus.lastEpoch.epoch }} \n                (损失: {{ trainingStatus.lastEpoch.loss.toFixed(4) }}, \n                准确率: {{ trainingStatus.lastEpoch.accuracy.toFixed(2) }}%)\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 只有在有数据时才显示图表容器 -->\n      <div class=\"chart-container\" v-if=\"trainingData.length > 0 && !chartError\">\n        <div class=\"chart-wrapper\">\n          <canvas ref=\"chartCanvas\"></canvas>\n        </div>\n      </div>\n\n      <!-- 图表错误提示 -->\n      <div class=\"chart-error\" v-if=\"chartError\">\n        <div class=\"error-icon\">⚠️</div>\n        <p>图表渲染失败: {{ chartError }}</p>\n        <button @click=\"retryChart\" class=\"retry-btn\">\n          <span class=\"btn-icon\">🔄</span>\n          重试图表\n        </button>\n      </div>\n\n      <!-- 无数据时显示提示 -->\n      <div class=\"no-data\" v-if=\"!loading && trainingData.length === 0\">\n        <div class=\"no-data-icon\">📈</div>\n        <p>暂无训练数据，请等待训练开始或检查后端连接</p>\n        <button @click=\"refreshData\" class=\"retry-btn\">\n          <span class=\"btn-icon\">🔄</span>\n          重试\n        </button>\n      </div>\n\n      <div class=\"data-table\" v-if=\"trainingData.length > 0\">\n        <div class=\"table-header\">\n          <h3>📋 训练数据详情</h3>\n        </div>\n        <div class=\"table-container\">\n          <table>\n            <thead>\n              <tr>\n                <th>轮次</th>\n                <th>损失值</th>\n                <th>准确率 (%)</th>\n                <th>学习率</th>\n                <th>用时</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in trainingData\" :key=\"item.epoch\">\n                <td>{{ item.epoch }}</td>\n                <td>{{ item.loss.toFixed(6) }}</td>\n                <td>{{ item.accuracy.toFixed(2) }}%</td>\n                <td>{{ item.learningRate.toFixed(6) }}</td>\n                <td>{{ item.epochTime }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue'\nimport Chart from 'chart.js/auto'\nimport { getTrainingHistory, getTrainingStatus } from '../api/training.js'\n\nconst chartCanvas = ref(null)\nconst chart = ref(null)\nconst trainingData = ref([])\nconst trainingStatus = ref(null)\nconst loading = ref(false)\nconst autoRefresh = ref(false)\nconst autoRefreshInterval = ref(null)\nconst chartError = ref(null)\n\n// 获取训练数据\nconst fetchTrainingData = async () => {\n  try {\n    loading.value = true\n    chartError.value = null\n    const response = await getTrainingHistory()\n    \n    if (response.data.success) {\n      trainingData.value = response.data.data || []\n      console.log('获取到训练数据:', trainingData.value.length, '条')\n      \n      // 如果有数据，尝试创建图表\n      if (trainingData.value.length > 0) {\n        await createChart()\n      }\n    }\n  } catch (error) {\n    console.error('获取训练数据失败:', error)\n    trainingData.value = []\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取训练状态\nconst fetchTrainingStatus = async () => {\n  try {\n    const response = await getTrainingStatus()\n    \n    if (response.data.success) {\n      trainingStatus.value = response.data\n    }\n  } catch (error) {\n    console.error('获取训练状态失败:', error)\n  }\n}\n\n// 刷新数据\nconst refreshData = async () => {\n  await Promise.all([fetchTrainingData(), fetchTrainingStatus()])\n}\n\n// 切换自动刷新\nconst toggleAutoRefresh = () => {\n  autoRefresh.value = !autoRefresh.value\n  \n  if (autoRefresh.value) {\n    autoRefreshInterval.value = setInterval(refreshData, 5000) // 每5秒刷新一次\n  } else {\n    if (autoRefreshInterval.value) {\n      clearInterval(autoRefreshInterval.value)\n      autoRefreshInterval.value = null\n    }\n  }\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  const statusMap = {\n    'idle': '空闲',\n    'completed': '已完成',\n    'training': '训练中'\n  }\n  return statusMap[status] || status\n}\n\n// 获取状态样式类\nconst getStatusClass = (status) => {\n  const classMap = {\n    'idle': 'status-idle',\n    'completed': 'status-completed',\n    'training': 'status-training'\n  }\n  return classMap[status] || ''\n}\n\n// 安全地销毁图表\nconst destroyChart = () => {\n  if (chart.value) {\n    try {\n      chart.value.destroy()\n      console.log('图表已销毁')\n    } catch (error) {\n      console.warn('销毁图表时出错:', error)\n    }\n    chart.value = null\n  }\n}\n\n// 重试图表\nconst retryChart = async () => {\n  chartError.value = null\n  if (trainingData.value.length > 0) {\n    await createChart()\n  }\n}\n\n// 创建图表\nconst createChart = async () => {\n  try {\n    // 等待DOM更新\n    await nextTick()\n    \n    // 检查canvas元素\n    if (!chartCanvas.value) {\n      throw new Error('Canvas元素不存在')\n    }\n    \n    // 销毁旧图表\n    destroyChart()\n    \n    // 验证数据\n    const validData = trainingData.value.filter(item => \n      item && \n      typeof item.epoch === 'number' && \n      typeof item.loss === 'number' && \n      typeof item.accuracy === 'number' &&\n      !isNaN(item.loss) && \n      !isNaN(item.accuracy)\n    )\n    \n    if (validData.length === 0) {\n      throw new Error('没有有效的训练数据')\n    }\n    \n    console.log('准备创建图表，有效数据:', validData.length, '条')\n    \n    // 准备数据\n    const epochs = validData.map(item => item.epoch)\n    const losses = validData.map(item => item.loss)\n    const accuracies = validData.map(item => item.accuracy)\n    \n    // 获取canvas上下文\n    const ctx = chartCanvas.value.getContext('2d')\n    if (!ctx) {\n      throw new Error('无法获取Canvas上下文')\n    }\n    \n    // 创建图表配置\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: epochs,\n        datasets: [\n          {\n            label: '平均损失',\n            data: losses,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.1)',\n            tension: 0.1,\n            yAxisID: 'y',\n            fill: false,\n            borderWidth: 3,\n            pointRadius: 6,\n            pointHoverRadius: 8\n          },\n          {\n            label: '平均准确率 (%)',\n            data: accuracies,\n            borderColor: 'rgb(54, 162, 235)',\n            backgroundColor: 'rgba(54, 162, 235, 0.1)',\n            tension: 0.1,\n            yAxisID: 'y1',\n            fill: false,\n            borderWidth: 3,\n            pointRadius: 6,\n            pointHoverRadius: 8\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          mode: 'index',\n          intersect: false,\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: '训练进度监控 - 损失值与准确率变化',\n            font: {\n              size: 18,\n              weight: 'bold'\n            },\n            color: '#1f2937'\n          },\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              usePointStyle: true,\n              padding: 20,\n              font: {\n                size: 14\n              }\n            }\n          },\n          tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            titleColor: '#ffffff',\n            bodyColor: '#ffffff',\n            borderColor: '#ffffff',\n            borderWidth: 1,\n            cornerRadius: 8,\n            callbacks: {\n              label: function(context) {\n                const label = context.dataset.label || ''\n                const value = context.parsed.y\n                if (label.includes('准确率')) {\n                  return `${label}: ${value.toFixed(2)}%`\n                } else {\n                  return `${label}: ${value.toFixed(6)}`\n                }\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: true,\n              text: '训练轮次',\n              font: {\n                size: 14,\n                weight: 'bold'\n              }\n            },\n            grid: {\n              color: 'rgba(0, 0, 0, 0.1)'\n            }\n          },\n          y: {\n            type: 'linear',\n            display: true,\n            position: 'left',\n            title: {\n              display: true,\n              text: '损失值',\n              font: {\n                size: 14,\n                weight: 'bold'\n              }\n            },\n            min: 0,\n            grid: {\n              color: 'rgba(0, 0, 0, 0.1)'\n            }\n          },\n          y1: {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            title: {\n              display: true,\n              text: '准确率 (%)',\n              font: {\n                size: 14,\n                weight: 'bold'\n              }\n            },\n            min: 0,\n            max: 100,\n            grid: {\n              drawOnChartArea: false,\n            },\n          }\n        }\n      }\n    }\n    \n    // 创建图表\n    chart.value = new Chart(ctx, chartConfig)\n    console.log('图表创建成功')\n    \n  } catch (error) {\n    console.error('创建图表失败:', error)\n    chartError.value = error.message\n    destroyChart()\n  }\n}\n\n// 组件挂载时初始化\nonMounted(async () => {\n  console.log('组件挂载，开始获取数据')\n  await refreshData()\n})\n\n// 组件卸载时清理\nonUnmounted(() => {\n  console.log('组件卸载，清理资源')\n  if (autoRefreshInterval.value) {\n    clearInterval(autoRefreshInterval.value)\n    autoRefreshInterval.value = null\n  }\n  destroyChart()\n})\n</script>\n\n<script>\nexport default {\n  name: 'TrainingChartPage'\n}\n</script>\n\n<style scoped>\n.training-chart-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n}\n\n.background-decoration {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: \n    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n    radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n    radial-gradient(circle at 40% 40%, rgba(120, 219, 226, 0.2) 0%, transparent 50%);\n  pointer-events: none;\n}\n\n.content-wrapper {\n  width: 100%;\n  max-width: 1200px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  box-shadow: \n    0 20px 40px rgba(0, 0, 0, 0.1),\n    0 0 1px rgba(255, 255, 255, 0.2);\n  padding: 30px;\n  position: relative;\n  z-index: 1;\n  animation: slideInUp 0.6s ease-out;\n}\n\n@keyframes slideInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  border-bottom: 2px solid rgba(102, 126, 234, 0.3);\n}\n\n.chart-header h2 {\n  margin: 0;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 2.2rem;\n  font-weight: 700;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.chart-controls {\n  display: flex;\n  gap: 15px;\n}\n\n.refresh-btn, .auto-refresh-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  position: relative;\n  overflow: hidden;\n}\n\n.refresh-btn {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n}\n\n.refresh-btn:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);\n}\n\n.refresh-btn:disabled {\n  background: linear-gradient(135deg, #9ca3af 0%, #6b7280 100%);\n  cursor: not-allowed;\n  transform: none;\n}\n\n.auto-refresh-btn {\n  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);\n  color: #374151;\n  border: 2px solid #d1d5db;\n}\n\n.auto-refresh-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\n.auto-refresh-btn.active {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  border-color: #10b981;\n  box-shadow: 0 8px 20px rgba(16, 185, 129, 0.4);\n}\n\n.btn-icon {\n  font-size: 16px;\n}\n\n.status-info {\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: center;\n}\n\n.status-card {\n  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n  border: 2px solid rgba(102, 126, 234, 0.3);\n  border-radius: 16px;\n  padding: 0;\n  max-width: 500px;\n  width: 100%;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  transition: all 0.3s ease;\n}\n\n.status-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n}\n\n.card-header {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 15px;\n  color: white;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1.3rem;\n  font-weight: 600;\n}\n\n.card-content {\n  padding: 20px;\n}\n\n.status-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  padding: 8px 0;\n}\n\n.status-item:last-child {\n  margin-bottom: 0;\n}\n\n.status-label {\n  font-weight: 600;\n  color: #374151;\n  font-size: 14px;\n}\n\n.status-value {\n  font-weight: 500;\n  color: #1f2937;\n  font-size: 14px;\n  padding: 4px 8px;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.8);\n}\n\n.status-idle {\n  background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);\n  color: white;\n}\n\n.status-completed {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n}\n\n.status-training {\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  color: white;\n}\n\n.chart-container {\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  border: 2px solid rgba(102, 126, 234, 0.3);\n  border-radius: 16px;\n  padding: 25px;\n  margin-bottom: 30px;\n  height: 500px;\n  position: relative;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.chart-container:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n}\n\n.chart-wrapper {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.chart-error {\n  background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);\n  border: 2px solid #fecaca;\n  border-radius: 16px;\n  padding: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  color: #dc2626;\n  box-shadow: 0 8px 20px rgba(220, 38, 38, 0.1);\n}\n\n.error-icon {\n  font-size: 48px;\n  margin-bottom: 15px;\n}\n\n.chart-error p {\n  margin: 0 0 20px 0;\n  font-weight: 600;\n  font-size: 16px;\n}\n\n.data-table {\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  border: 2px solid rgba(102, 126, 234, 0.3);\n  border-radius: 16px;\n  padding: 0;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.table-header {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n  color: white;\n}\n\n.table-header h3 {\n  margin: 0;\n  font-size: 1.3rem;\n  font-weight: 600;\n}\n\n.table-container {\n  padding: 20px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 14px;\n}\n\nth, td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid rgba(102, 126, 234, 0.2);\n}\n\nth {\n  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n  font-weight: 600;\n  color: #374151;\n  font-size: 14px;\n}\n\ntd {\n  color: #4b5563;\n  font-size: 13px;\n}\n\ntr:hover {\n  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n  transition: all 0.2s ease;\n}\n\n.no-data {\n  text-align: center;\n  padding: 60px 40px;\n  color: #6b7280;\n  background: linear-gradient(135deg, #f9fafb 0%, #f3f4f6 100%);\n  border-radius: 16px;\n  border: 2px dashed rgba(102, 126, 234, 0.3);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);\n}\n\n.no-data-icon {\n  font-size: 64px;\n  margin-bottom: 20px;\n  opacity: 0.6;\n}\n\n.no-data p {\n  margin: 0 0 20px 0;\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.retry-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 24px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n}\n\n.retry-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .content-wrapper {\n    padding: 20px;\n    margin: 10px;\n  }\n  \n  .chart-header {\n    flex-direction: column;\n    gap: 15px;\n    text-align: center;\n  }\n  \n  .chart-header h2 {\n    font-size: 1.8rem;\n  }\n  \n  .chart-controls {\n    flex-direction: column;\n    width: 100%;\n  }\n  \n  .refresh-btn, .auto-refresh-btn {\n    width: 100%;\n    justify-content: center;\n  }\n  \n  .status-card {\n    max-width: 100%;\n  }\n  \n  .chart-container {\n    height: 400px;\n    padding: 15px;\n  }\n  \n  .table-container {\n    padding: 15px;\n  }\n  \n  th, td {\n    padding: 8px 10px;\n    font-size: 12px;\n  }\n}\n\n@media (max-width: 480px) {\n  .training-chart-container {\n    padding: 10px;\n  }\n  \n  .content-wrapper {\n    padding: 15px;\n  }\n  \n  .chart-header h2 {\n    font-size: 1.5rem;\n  }\n  \n  .chart-container {\n    height: 350px;\n    padding: 10px;\n  }\n  \n  .status-card {\n    padding: 0;\n  }\n  \n  .card-content {\n    padding: 15px;\n  }\n  \n  .status-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 5px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}