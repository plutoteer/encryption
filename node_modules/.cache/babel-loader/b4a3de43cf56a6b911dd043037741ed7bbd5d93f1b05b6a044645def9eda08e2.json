{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport { getSelfStatus, getOnlineStatus } from '../api/participant';\nexport default {\n  __name: 'ParticipantStatus',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const status = ref(null);\n    const allPorts = ref([]);\n    function extractPort(url) {\n      // url格式: http://ip:port\n      const match = url.match(/:(\\d+)(?:$|\\D)/);\n      return match ? match[1] : '';\n    }\n    onMounted(async () => {\n      const res = await getSelfStatus();\n      status.value = res.data;\n\n      // 获取所有在线参与方端口\n      const onlineRes = await getOnlineStatus();\n      if (onlineRes.data && Array.isArray(onlineRes.data.participants)) {\n        allPorts.value = onlineRes.data.participants.map(p => ({\n          id: p.id,\n          port: extractPort(p.url)\n        }));\n      }\n    });\n    const __returned__ = {\n      status,\n      allPorts,\n      extractPort,\n      ref,\n      onMounted,\n      get getSelfStatus() {\n        return getSelfStatus;\n      },\n      get getOnlineStatus() {\n        return getOnlineStatus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","getSelfStatus","getOnlineStatus","status","allPorts","extractPort","url","match","res","value","data","onlineRes","Array","isArray","participants","map","p","id","port"],"sources":["D:/down/MPHEDEV/encryption_par/src/components/ParticipantStatus.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3>自身状态</h3>\r\n    <div v-if=\"status\">\r\n      <div>ID: {{ status.id }}</div>\r\n      <div>IP: {{ status.ip }}:{{ status.port }}</div>\r\n      <div>状态: {{ status.status }}</div>\r\n      <div>数据分片: {{ status.data_split }}</div>\r\n      <div>参与方: <span v-for=\"(ip, id) in status.participants\" :key=\"id\">{{ id }}:{{ ip }} </span></div>\r\n    </div>\r\n    <div v-if=\"allPorts.length\">\r\n      <h4>所有在线参与方端口:</h4>\r\n      <ul>\r\n        <li v-for=\"p in allPorts\" :key=\"p.id\">ID: {{ p.id }} | 端口: {{ p.port }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { getSelfStatus, getOnlineStatus } from '../api/participant'\r\n\r\nconst status = ref(null)\r\nconst allPorts = ref([])\r\n\r\nfunction extractPort(url) {\r\n  // url格式: http://ip:port\r\n  const match = url.match(/:(\\d+)(?:$|\\D)/)\r\n  return match ? match[1] : ''\r\n}\r\n\r\nonMounted(async () => {\r\n  const res = await getSelfStatus()\r\n  status.value = res.data\r\n\r\n  // 获取所有在线参与方端口\r\n  const onlineRes = await getOnlineStatus()\r\n  if (onlineRes.data && Array.isArray(onlineRes.data.participants)) {\r\n    allPorts.value = onlineRes.data.participants.map(p => ({\r\n      id: p.id,\r\n      port: extractPort(p.url)\r\n    }))\r\n  }\r\n})\r\n</script>\r\n"],"mappings":";;AAmBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,aAAa,EAAEC,eAAe,QAAQ,oBAAoB;;;;;;;IAEnE,MAAMC,MAAM,GAAGJ,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IAExB,SAASM,WAAWA,CAACC,GAAG,EAAE;MACxB;MACA,MAAMC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAAC,gBAAgB,CAAC;MACzC,OAAOA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;IAC9B;IAEAP,SAAS,CAAC,YAAY;MACpB,MAAMQ,GAAG,GAAG,MAAMP,aAAa,CAAC,CAAC;MACjCE,MAAM,CAACM,KAAK,GAAGD,GAAG,CAACE,IAAI;;MAEvB;MACA,MAAMC,SAAS,GAAG,MAAMT,eAAe,CAAC,CAAC;MACzC,IAAIS,SAAS,CAACD,IAAI,IAAIE,KAAK,CAACC,OAAO,CAACF,SAAS,CAACD,IAAI,CAACI,YAAY,CAAC,EAAE;QAChEV,QAAQ,CAACK,KAAK,GAAGE,SAAS,CAACD,IAAI,CAACI,YAAY,CAACC,GAAG,CAACC,CAAC,KAAK;UACrDC,EAAE,EAAED,CAAC,CAACC,EAAE;UACRC,IAAI,EAAEb,WAAW,CAACW,CAAC,CAACV,GAAG;QACzB,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}