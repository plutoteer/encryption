{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"ParticipantStatus\"]), _createVNode($setup[\"KeyGenProgress\"], {\n    ref: \"keyGenProgressRef\"\n  }, null, 512 /* NEED_PATCH */), _createVNode($setup[\"CoordinatorIPInput\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","$setup","ref"],"sources":["D:\\down\\MPHEDEV\\encryption_par\\src\\views\\ParticipantDashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <ParticipantStatus />\r\n    <KeyGenProgress ref=\"keyGenProgressRef\" />\r\n    <CoordinatorIPInput />\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport ParticipantStatus from '../components/ParticipantStatus.vue'\r\nimport KeyGenProgress from '../components/KeyGenProgress.vue'\r\nimport CoordinatorIPInput from '../components/CoordinatorIPInput.vue'\r\nimport { provide, ref, onMounted, onUnmounted } from 'vue'\r\n\r\nconst ws = ref(null)\r\nprovide('ws', ws)\r\n\r\nconst keyGenProgressRef = ref(null)\r\n\r\nonMounted(() => {\r\n  ws.value = new WebSocket('ws://26.100.135.52:8081/api/participant/ws')\r\n  ws.value.onopen = () => {\r\n    console.log('WebSocket 连接已建立')\r\n  }\r\n  ws.value.onmessage = (event) => {\r\n    const msg = JSON.parse(event.data)\r\n    if (msg.type === 'keygen_progress' && keyGenProgressRef.value) {\r\n      keyGenProgressRef.value.handleKeyGenProgress(msg)\r\n    }\r\n    // 处理后端推送的消息，比如密钥进度、IP等\r\n    console.log('收到消息', msg)\r\n  }\r\n  ws.value.onclose = () => {\r\n    console.log('WebSocket 连接已关闭')\r\n  }\r\n  ws.value.onerror = (err) => {\r\n    console.error('WebSocket 错误', err)\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (ws.value) ws.value.close()\r\n})\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAIM,cAHJC,YAAA,CAAqBC,MAAA,wBACrBD,YAAA,CAA0CC,MAAA;IAA1BC,GAAG,EAAC;EAAmB,gCACvCF,YAAA,CAAsBC,MAAA,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}