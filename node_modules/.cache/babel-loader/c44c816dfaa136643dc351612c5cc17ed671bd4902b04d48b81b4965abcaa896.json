{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"padding\": \"24px\",\n    \"max-width\": \"800px\",\n    \"margin\": \"auto\"\n  }\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"在线状态\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    onClick: $setup.fetchSelfStatus\n  }, \"查看自身状态\"), $setup.selfStatus ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"pre\", null, _toDisplayString($setup.selfStatus), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: $setup.fetchOnlineStatus,\n    style: {\n      \"margin-top\": \"16px\"\n    }\n  }, \"查询所有在线参与方\"), $setup.onlineStatus ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, \"在线数: \" + _toDisplayString($setup.onlineStatus.online_count) + \" / 总数: \" + _toDisplayString($setup.onlineStatus.total_count), 1 /* TEXT */), _createElementVNode(\"div\", null, \"在线比例: \" + _toDisplayString($setup.onlineStatus.online_percentage), 1 /* TEXT */), _createElementVNode(\"div\", null, \"最小参与方数: \" + _toDisplayString($setup.onlineStatus.min_participants), 1 /* TEXT */), _createElementVNode(\"div\", null, \"可继续: \" + _toDisplayString($setup.onlineStatus.can_proceed ? '是' : '否'), 1 /* TEXT */), _createElementVNode(\"div\", null, \"超时时间: \" + _toDisplayString($setup.onlineStatus.online_timeout), 1 /* TEXT */), _createElementVNode(\"div\", null, \"心跳间隔: \" + _toDisplayString($setup.onlineStatus.heartbeat_interval), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"h4\", null, \"参与方列表:\", -1 /* CACHED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.onlineStatus.participants, p => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: p.id\n    }, \" ID: \" + _toDisplayString(p.id) + \" | URL: \" + _toDisplayString(p.url) + \" | 状态: \" + _toDisplayString(p.status) + \" | 最后心跳: \" + _toDisplayString(p.last_heartbeat), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createElementVNode","onClick","$setup","fetchSelfStatus","selfStatus","_hoisted_2","_toDisplayString","fetchOnlineStatus","onlineStatus","_hoisted_3","online_count","total_count","online_percentage","min_participants","can_proceed","online_timeout","heartbeat_interval","_Fragment","_renderList","participants","p","key","id","url","status","last_heartbeat"],"sources":["D:\\down\\MPHEDEV\\encryption_par\\src\\views\\OnlineStatusPage.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 24px; max-width: 800px; margin: auto;\">\r\n    <h2>在线状态</h2>\r\n    <button @click=\"fetchSelfStatus\">查看自身状态</button>\r\n    <div v-if=\"selfStatus\">\r\n      <pre>{{ selfStatus }}</pre>\r\n    </div>\r\n    <button @click=\"fetchOnlineStatus\" style=\"margin-top: 16px;\">查询所有在线参与方</button>\r\n    <div v-if=\"onlineStatus\">\r\n      <div>在线数: {{ onlineStatus.online_count }} / 总数: {{ onlineStatus.total_count }}</div>\r\n      <div>在线比例: {{ onlineStatus.online_percentage }}</div>\r\n      <div>最小参与方数: {{ onlineStatus.min_participants }}</div>\r\n      <div>可继续: {{ onlineStatus.can_proceed ? '是' : '否' }}</div>\r\n      <div>超时时间: {{ onlineStatus.online_timeout }}</div>\r\n      <div>心跳间隔: {{ onlineStatus.heartbeat_interval }}</div>\r\n      <h4>参与方列表:</h4>\r\n      <ul>\r\n        <li v-for=\"p in onlineStatus.participants\" :key=\"p.id\">\r\n          ID: {{ p.id }} | URL: {{ p.url }} | 状态: {{ p.status }} | 最后心跳: {{ p.last_heartbeat }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst selfStatus = ref('')\r\nconst onlineStatus = ref(null)\r\n\r\nasync function fetchSelfStatus() {\r\n  const res = await axios.get('/api/participant/status')\r\n  selfStatus.value = JSON.stringify(res.data, null, 2)\r\n}\r\nasync function fetchOnlineStatus() {\r\n  const res = await axios.get('/api/participant/online-status')\r\n  onlineStatus.value = res.data\r\n}\r\n</script>\r\n"],"mappings":";;EACOA,KAAsD,EAAtD;IAAA;IAAA;IAAA;EAAA;AAAsD;;;;;;;;uBAA3DC,mBAAA,CAqBM,OArBNC,UAqBM,G,0BApBJC,mBAAA,CAAa,YAAT,MAAI,qBACRA,mBAAA,CAAgD;IAAvCC,OAAK,EAAEC,MAAA,CAAAC;EAAe,GAAE,QAAM,GAC5BD,MAAA,CAAAE,UAAU,I,cAArBN,mBAAA,CAEM,OAAAO,UAAA,GADJL,mBAAA,CAA2B,aAAAM,gBAAA,CAAnBJ,MAAA,CAAAE,UAAU,iB,wCAEpBJ,mBAAA,CAA+E;IAAtEC,OAAK,EAAEC,MAAA,CAAAK,iBAAiB;IAAEV,KAAyB,EAAzB;MAAA;IAAA;KAA0B,WAAS,GAC3DK,MAAA,CAAAM,YAAY,I,cAAvBV,mBAAA,CAaM,OAAAW,UAAA,GAZJT,mBAAA,CAAoF,aAA/E,OAAK,GAAAM,gBAAA,CAAGJ,MAAA,CAAAM,YAAY,CAACE,YAAY,IAAG,SAAO,GAAAJ,gBAAA,CAAGJ,MAAA,CAAAM,YAAY,CAACG,WAAW,kBAC3EX,mBAAA,CAAqD,aAAhD,QAAM,GAAAM,gBAAA,CAAGJ,MAAA,CAAAM,YAAY,CAACI,iBAAiB,kBAC5CZ,mBAAA,CAAsD,aAAjD,UAAQ,GAAAM,gBAAA,CAAGJ,MAAA,CAAAM,YAAY,CAACK,gBAAgB,kBAC7Cb,mBAAA,CAA0D,aAArD,OAAK,GAAAM,gBAAA,CAAGJ,MAAA,CAAAM,YAAY,CAACM,WAAW,8BACrCd,mBAAA,CAAkD,aAA7C,QAAM,GAAAM,gBAAA,CAAGJ,MAAA,CAAAM,YAAY,CAACO,cAAc,kBACzCf,mBAAA,CAAsD,aAAjD,QAAM,GAAAM,gBAAA,CAAGJ,MAAA,CAAAM,YAAY,CAACQ,kBAAkB,kB,0BAC7ChB,mBAAA,CAAe,YAAX,QAAM,qBACVA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKmB,SAAA,QAAAC,WAAA,CAFWhB,MAAA,CAAAM,YAAY,CAACW,YAAY,EAA9BC,CAAC;yBAAZtB,mBAAA,CAEK;MAFuCuB,GAAG,EAAED,CAAC,CAACE;OAAI,OACjD,GAAAhB,gBAAA,CAAGc,CAAC,CAACE,EAAE,IAAG,UAAQ,GAAAhB,gBAAA,CAAGc,CAAC,CAACG,GAAG,IAAG,SAAO,GAAAjB,gBAAA,CAAGc,CAAC,CAACI,MAAM,IAAG,WAAS,GAAAlB,gBAAA,CAAGc,CAAC,CAACK,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}