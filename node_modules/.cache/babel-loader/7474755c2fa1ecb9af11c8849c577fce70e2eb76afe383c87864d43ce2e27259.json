{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport BackendOutput from '../components/BackendOutput.vue';\nimport { getSelfStatus } from '../api/participant';\nexport default {\n  __name: 'BackendOutputPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const participantId = ref(0);\n    const status = ref('未知');\n    const port = ref('');\n    const layerType = computed(() => {\n      switch (participantId.value) {\n        case 1:\n          return '输入层 (Input Layer)';\n        case 2:\n          return '隐藏层 (Hidden Layer)';\n        case 3:\n          return '输出层 (Output Layer)';\n        default:\n          return '未知层';\n      }\n    });\n    const statusClass = computed(() => {\n      switch (status.value) {\n        case '在线':\n          return 'online';\n        case '离线':\n          return 'offline';\n        default:\n          return 'unknown';\n      }\n    });\n    const getParticipantColor = id => {\n      const colors = {\n        1: '#2563eb',\n        2: '#dc2626',\n        3: '#059669'\n      };\n      return colors[id] || '#6b7280';\n    };\n    async function fetchParticipantInfo() {\n      try {\n        const response = await getSelfStatus();\n        const data = response.data;\n        console.log('后端状态响应:', data);\n\n        // 根据端口确定参与方ID\n        const backendPort = data.port || window.location.port || '8030';\n        let determinedId = 1; // 默认值\n\n        // 根据后端端口确定参与方ID\n        switch (backendPort.toString()) {\n          case '8083':\n            determinedId = 1;\n            break;\n          case '8082':\n            determinedId = 2;\n            break;\n          case '8081':\n            determinedId = 3;\n            break;\n          default:\n            // 如果端口不匹配，尝试从响应数据获取ID\n            determinedId = data.participant_id || data.id || 1;\n        }\n        participantId.value = determinedId;\n        console.log('确定的参与方ID:', determinedId, '基于端口:', backendPort);\n        if (data.status) {\n          status.value = data.status;\n        }\n\n        // 设置端口显示\n        port.value = backendPort;\n      } catch (error) {\n        console.error('获取参与方信息失败:', error);\n        status.value = '获取失败';\n\n        // 如果API调用失败，根据前端端口推断参与方ID\n        const frontendPort = window.location.port || '8030';\n        switch (frontendPort) {\n          case '8030':\n            participantId.value = 1;\n            port.value = '8083';\n            break;\n          case '8031':\n            participantId.value = 2;\n            port.value = '8082';\n            break;\n          case '8032':\n            participantId.value = 3;\n            port.value = '8081';\n            break;\n          default:\n            participantId.value = 1;\n            port.value = '8083';\n        }\n      }\n    }\n    onMounted(() => {\n      fetchParticipantInfo();\n    });\n    const __returned__ = {\n      participantId,\n      status,\n      port,\n      layerType,\n      statusClass,\n      getParticipantColor,\n      fetchParticipantInfo,\n      ref,\n      computed,\n      onMounted,\n      BackendOutput,\n      get getSelfStatus() {\n        return getSelfStatus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","BackendOutput","getSelfStatus","participantId","status","port","layerType","value","statusClass","getParticipantColor","id","colors","fetchParticipantInfo","response","data","console","log","backendPort","window","location","determinedId","toString","participant_id","error","frontendPort"],"sources":["E:/大三下学习资料/项目实训/MPHEDevCombine/MPHEDevFrontEnd/ParticipantFrontEnd/encryption/src/views/BackendOutputPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"backend-output-page\">\r\n    <!-- 页面头部 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h1 class=\"page-title\">参与方后端输出监控</h1>\r\n        <div class=\"participant-info\">\r\n          <div class=\"participant-badge\" :style=\"{ backgroundColor: getParticipantColor(participantId) }\">\r\n            <div class=\"badge-icon\">🔧</div>\r\n            <span class=\"badge-text\">参与方 #{{ participantId }}</span>\r\n          </div>\r\n          <div class=\"layer-info\">\r\n            <div class=\"layer-badge\">\r\n              <span class=\"layer-icon\">🏗️</span>\r\n              <span class=\"layer-text\">{{ layerType }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 主要内容区域 -->\r\n    <div class=\"content-grid\">\r\n      <!-- 后端输出组件 -->\r\n      <div class=\"output-section\">\r\n        <BackendOutput :participant-id=\"participantId\" />\r\n      </div>\r\n      <!-- 系统信息面板 -->\r\n      <div class=\"info-section\">\r\n        <div class=\"info-card\">\r\n          <div class=\"card-header\">\r\n            <div class=\"card-icon\">📊</div>\r\n            <h3 class=\"card-title\">系统信息</h3>\r\n          </div>\r\n          <div class=\"card-content\">\r\n            <div class=\"info-grid\">\r\n              <div class=\"info-item\">\r\n                <div class=\"info-label\">\r\n                  <span class=\"label-icon\">🆔</span>\r\n                  <span class=\"label-text\">参与方ID</span>\r\n                </div>\r\n                <div class=\"info-value\">{{ participantId }}</div>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <div class=\"info-label\">\r\n                  <span class=\"label-icon\">🏗️</span>\r\n                  <span class=\"label-text\">层类型</span>\r\n                </div>\r\n                <div class=\"info-value\">{{ layerType }}</div>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <div class=\"info-label\">\r\n                  <span class=\"label-icon\">🔌</span>\r\n                  <span class=\"label-text\">端口</span>\r\n                </div>\r\n                <div class=\"info-value\">{{ port }}</div>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <div class=\"info-label\">\r\n                  <span class=\"label-icon\">📡</span>\r\n                  <span class=\"label-text\">状态</span>\r\n                </div>\r\n                <div class=\"info-value\">\r\n                  <span :class=\"['status-badge', statusClass]\">{{ status }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport BackendOutput from '../components/BackendOutput.vue'\r\nimport { getSelfStatus } from '../api/participant'\r\n\r\nconst participantId = ref(0)\r\nconst status = ref('未知')\r\nconst port = ref('')\r\n\r\nconst layerType = computed(() => {\r\n  switch (participantId.value) {\r\n    case 1:\r\n      return '输入层 (Input Layer)'\r\n    case 2:\r\n      return '隐藏层 (Hidden Layer)'\r\n    case 3:\r\n      return '输出层 (Output Layer)'\r\n    default:\r\n      return '未知层'\r\n  }\r\n})\r\n\r\nconst statusClass = computed(() => {\r\n  switch (status.value) {\r\n    case '在线':\r\n      return 'online'\r\n    case '离线':\r\n      return 'offline'\r\n    default:\r\n      return 'unknown'\r\n  }\r\n})\r\n\r\nconst getParticipantColor = (id) => {\r\n  const colors = {\r\n    1: '#2563eb',\r\n    2: '#dc2626',\r\n    3: '#059669'\r\n  }\r\n  return colors[id] || '#6b7280'\r\n}\r\n\r\nasync function fetchParticipantInfo() {\r\n  try {\r\n    const response = await getSelfStatus()\r\n    const data = response.data\r\n    console.log('后端状态响应:', data)\r\n    \r\n    // 根据端口确定参与方ID\r\n    const backendPort = data.port || window.location.port || '8030'\r\n    let determinedId = 1 // 默认值\r\n    \r\n    // 根据后端端口确定参与方ID\r\n    switch (backendPort.toString()) {\r\n      case '8083':\r\n        determinedId = 1\r\n        break\r\n      case '8082':\r\n        determinedId = 2\r\n        break\r\n      case '8081':\r\n        determinedId = 3\r\n        break\r\n      default:\r\n        // 如果端口不匹配，尝试从响应数据获取ID\r\n        determinedId = data.participant_id || data.id || 1\r\n    }\r\n    \r\n    participantId.value = determinedId\r\n    console.log('确定的参与方ID:', determinedId, '基于端口:', backendPort)\r\n    \r\n    if (data.status) {\r\n      status.value = data.status\r\n    }\r\n    \r\n    // 设置端口显示\r\n    port.value = backendPort\r\n    \r\n  } catch (error) {\r\n    console.error('获取参与方信息失败:', error)\r\n    status.value = '获取失败'\r\n    \r\n    // 如果API调用失败，根据前端端口推断参与方ID\r\n    const frontendPort = window.location.port || '8030'\r\n    switch (frontendPort) {\r\n      case '8030':\r\n        participantId.value = 1\r\n        port.value = '8083'\r\n        break\r\n      case '8031':\r\n        participantId.value = 2\r\n        port.value = '8082'\r\n        break\r\n      case '8032':\r\n        participantId.value = 3\r\n        port.value = '8081'\r\n        break\r\n      default:\r\n        participantId.value = 1\r\n        port.value = '8083'\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchParticipantInfo()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.backend-output-page {\r\n  max-width: 1600px;\r\n  margin: 0 auto;\r\n  padding: 15px;\r\n  min-height: calc(100vh - 140px);\r\n  position: relative;\r\n}\r\n\r\n.page-header {\r\n  position: relative;\r\n  z-index: 1;\r\n  padding: 40px 60px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 25px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n}\r\n\r\n.header-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 25px;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 3.2rem;\r\n  font-weight: 900;\r\n  background: linear-gradient(135deg, #ffffff 0%, #f1f5f9 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-shadow: 0 4px 30px rgba(255, 255, 255, 0.4);\r\n  letter-spacing: -0.02em;\r\n  line-height: 1.1;\r\n}\r\n\r\n.participant-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  gap: 15px;\r\n}\r\n\r\n.participant-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 16px 28px;\r\n  border-radius: 30px;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 1.1rem;\r\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);\r\n  backdrop-filter: blur(15px);\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  transform: perspective(1000px) rotateX(5deg);\r\n}\r\n\r\n.badge-icon {\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.layer-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.layer-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  background: rgba(255, 255, 255, 0.15);\r\n  backdrop-filter: blur(15px);\r\n  padding: 14px 24px;\r\n  border-radius: 25px;\r\n  border: 1px solid rgba(255, 255, 255, 0.25);\r\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.layer-icon {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.layer-text {\r\n  font-weight: 600;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.content-grid {\r\n  position: relative;\r\n  z-index: 1;\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 20px;\r\n}\r\n\r\n.output-section {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.info-section {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.info-card {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(25px);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 25px;\r\n  overflow: hidden;\r\n  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.12);\r\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: relative;\r\n}\r\n\r\n.info-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 5px;\r\n  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\r\n}\r\n\r\n.info-card:hover {\r\n  transform: translateY(-5px) scale(1.02);\r\n  box-shadow: 0 25px 70px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 18px;\r\n  padding: 30px 30px 20px 30px;\r\n}\r\n\r\n.card-icon {\r\n  font-size: 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 60px;\r\n  height: 60px;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 18px;\r\n  box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);\r\n}\r\n\r\n.card-title {\r\n  margin: 0;\r\n  color: #1e293b;\r\n  font-size: 1.4rem;\r\n  font-weight: 800;\r\n  letter-spacing: -0.01em;\r\n}\r\n\r\n.card-content {\r\n  padding: 0 30px 30px 30px;\r\n}\r\n\r\n.info-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: linear-gradient(135deg, rgba(102,126,234,0.05) 0%, rgba(118,75,162,0.05) 100%);\r\n  border-radius: 18px;\r\n  border: 1px solid rgba(102,126,234,0.1);\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n.info-item:hover {\r\n  background: linear-gradient(135deg, rgba(102,126,234,0.1) 0%, rgba(118,75,162,0.1) 100%);\r\n  transform: translateX(5px);\r\n  box-shadow: 0 8px 25px rgba(102,126,234,0.05);\r\n}\r\n.info-label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n.label-icon {\r\n  font-size: 1.2rem;\r\n}\r\n.label-text {\r\n  font-weight: 600;\r\n  color: #374151;\r\n  font-size: 0.95em;\r\n}\r\n.info-value {\r\n  font-weight: 700;\r\n  color: #1e293b;\r\n  font-size: 1rem;\r\n}\r\n.status-badge {\r\n  padding: 8px 18px;\r\n  border-radius: 20px;\r\n  font-size: 0.85rem;\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.05em;\r\n}\r\n.status-badge.online {\r\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\r\n  color: white;\r\n  box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\r\n}\r\n.status-badge.offline {\r\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\r\n  color: white;\r\n  box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);\r\n}\r\n.status-badge.unknown {\r\n  background: linear-gradient(135deg, #f59e42 0%, #d97706 100%);\r\n  color: white;\r\n  box-shadow: 0 4px 15px rgba(245, 158, 66, 0.3);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1200px) {\r\n  .content-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  .page-header {\r\n    padding: 35px 45px;\r\n  }\r\n  .page-title {\r\n    font-size: 2.8rem;\r\n  }\r\n}\r\n@media (max-width: 768px) {\r\n  .backend-output-page {\r\n    padding: 10px;\r\n  }\r\n  .page-header {\r\n    padding: 25px 30px;\r\n    width: 100%;\r\n  }\r\n  .header-content {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    gap: 20px;\r\n  }\r\n  .page-title {\r\n    font-size: 2.4rem;\r\n  }\r\n  .participant-info {\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n  .participant-badge,\r\n  .layer-badge {\r\n    width: 100%;\r\n    justify-content: center;\r\n  }\r\n  .card-header {\r\n    padding: 25px 25px 15px 25px;\r\n  }\r\n  .card-content {\r\n    padding: 0 25px 25px 25px;\r\n  }\r\n  .info-item {\r\n    padding: 15px;\r\n  }\r\n}\r\n\r\n/* 页面加载动画 */\r\n.backend-output-page {\r\n  animation: fadeInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(30px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n/* 头部进入动画 */\r\n.page-header {\r\n  animation: slideInTop 0.8s cubic-bezier(0.4, 0, 0.2, 1) both;\r\n}\r\n@keyframes slideInTop {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-50px) scale(0.95);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0) scale(1);\r\n  }\r\n}\r\n/* 卡片进入动画 */\r\n.info-card {\r\n  animation: slideInCard 0.6s cubic-bezier(0.4, 0, 0.2, 1) both;\r\n  animation-delay: 0.2s;\r\n}\r\n@keyframes slideInCard {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(60px) scale(0.9);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0) scale(1);\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}