{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue';\nimport Chart from 'chart.js/auto';\nimport { getTrainingHistory, getTrainingStatus } from '../api/training.js';\nconst __default__ = {\n  name: 'TrainingChartPage'\n};\nexport default /*@__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const chartCanvas = ref(null);\n    const chart = ref(null);\n    const trainingData = ref([]);\n    const trainingStatus = ref(null);\n    const loading = ref(false);\n    const autoRefresh = ref(false);\n    const autoRefreshInterval = ref(null);\n    const chartError = ref(null);\n\n    // 获取训练数据\n    const fetchTrainingData = async () => {\n      try {\n        loading.value = true;\n        chartError.value = null;\n        const response = await getTrainingHistory();\n        if (response.data.success) {\n          trainingData.value = response.data.data || [];\n          console.log('获取到训练数据:', trainingData.value.length, '条');\n\n          // 如果有数据，尝试创建图表\n          if (trainingData.value.length > 0) {\n            await createChart();\n          }\n        }\n      } catch (error) {\n        console.error('获取训练数据失败:', error);\n        trainingData.value = [];\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取训练状态\n    const fetchTrainingStatus = async () => {\n      try {\n        const response = await getTrainingStatus();\n        if (response.data.success) {\n          trainingStatus.value = response.data;\n        }\n      } catch (error) {\n        console.error('获取训练状态失败:', error);\n      }\n    };\n\n    // 刷新数据\n    const refreshData = async () => {\n      await Promise.all([fetchTrainingData(), fetchTrainingStatus()]);\n    };\n\n    // 切换自动刷新\n    const toggleAutoRefresh = () => {\n      autoRefresh.value = !autoRefresh.value;\n      if (autoRefresh.value) {\n        autoRefreshInterval.value = setInterval(refreshData, 5000); // 每5秒刷新一次\n      } else {\n        if (autoRefreshInterval.value) {\n          clearInterval(autoRefreshInterval.value);\n          autoRefreshInterval.value = null;\n        }\n      }\n    };\n\n    // 获取状态文本\n    const getStatusText = status => {\n      const statusMap = {\n        'idle': '空闲',\n        'completed': '已完成',\n        'training': '训练中'\n      };\n      return statusMap[status] || status;\n    };\n\n    // 获取状态样式类\n    const getStatusClass = status => {\n      const classMap = {\n        'idle': 'status-idle',\n        'completed': 'status-completed',\n        'training': 'status-training'\n      };\n      return classMap[status] || '';\n    };\n\n    // 安全地销毁图表\n    const destroyChart = () => {\n      if (chart.value) {\n        try {\n          chart.value.destroy();\n          console.log('图表已销毁');\n        } catch (error) {\n          console.warn('销毁图表时出错:', error);\n        }\n        chart.value = null;\n      }\n    };\n\n    // 重试图表\n    const retryChart = async () => {\n      chartError.value = null;\n      if (trainingData.value.length > 0) {\n        await createChart();\n      }\n    };\n\n    // 创建图表\n    const createChart = async () => {\n      try {\n        // 等待DOM更新\n        await nextTick();\n\n        // 检查canvas元素\n        if (!chartCanvas.value) {\n          throw new Error('Canvas元素不存在');\n        }\n\n        // 销毁旧图表\n        destroyChart();\n\n        // 验证数据\n        const validData = trainingData.value.filter(item => item && typeof item.epoch === 'number' && typeof item.loss === 'number' && typeof item.accuracy === 'number' && !isNaN(item.loss) && !isNaN(item.accuracy));\n        if (validData.length === 0) {\n          throw new Error('没有有效的训练数据');\n        }\n        console.log('准备创建图表，有效数据:', validData.length, '条');\n\n        // 准备数据\n        const epochs = validData.map(item => item.epoch);\n        const losses = validData.map(item => item.loss);\n        const accuracies = validData.map(item => item.accuracy);\n\n        // 获取canvas上下文\n        const ctx = chartCanvas.value.getContext('2d');\n        if (!ctx) {\n          throw new Error('无法获取Canvas上下文');\n        }\n\n        // 创建图表配置\n        const chartConfig = {\n          type: 'line',\n          data: {\n            labels: epochs,\n            datasets: [{\n              label: '平均损失',\n              data: losses,\n              borderColor: 'rgb(255, 99, 132)',\n              backgroundColor: 'rgba(255, 99, 132, 0.1)',\n              tension: 0.1,\n              yAxisID: 'y',\n              fill: false,\n              borderWidth: 3,\n              pointRadius: 6,\n              pointHoverRadius: 8\n            }, {\n              label: '平均准确率 (%)',\n              data: accuracies,\n              borderColor: 'rgb(54, 162, 235)',\n              backgroundColor: 'rgba(54, 162, 235, 0.1)',\n              tension: 0.1,\n              yAxisID: 'y1',\n              fill: false,\n              borderWidth: 3,\n              pointRadius: 6,\n              pointHoverRadius: 8\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            interaction: {\n              mode: 'index',\n              intersect: false\n            },\n            plugins: {\n              title: {\n                display: true,\n                text: '训练进度监控 - 损失值与准确率变化',\n                font: {\n                  size: 18,\n                  weight: 'bold'\n                },\n                color: '#1f2937'\n              },\n              legend: {\n                display: true,\n                position: 'top',\n                labels: {\n                  usePointStyle: true,\n                  padding: 20,\n                  font: {\n                    size: 14\n                  }\n                }\n              },\n              tooltip: {\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                titleColor: '#ffffff',\n                bodyColor: '#ffffff',\n                borderColor: '#ffffff',\n                borderWidth: 1,\n                cornerRadius: 8,\n                callbacks: {\n                  label: function (context) {\n                    const label = context.dataset.label || '';\n                    const value = context.parsed.y;\n                    if (label.includes('准确率')) {\n                      return `${label}: ${value.toFixed(2)}%`;\n                    } else {\n                      return `${label}: ${value.toFixed(6)}`;\n                    }\n                  }\n                }\n              }\n            },\n            scales: {\n              x: {\n                display: true,\n                title: {\n                  display: true,\n                  text: '训练轮次',\n                  font: {\n                    size: 14,\n                    weight: 'bold'\n                  }\n                },\n                grid: {\n                  color: 'rgba(0, 0, 0, 0.1)'\n                }\n              },\n              y: {\n                type: 'linear',\n                display: true,\n                position: 'left',\n                title: {\n                  display: true,\n                  text: '损失值',\n                  font: {\n                    size: 14,\n                    weight: 'bold'\n                  }\n                },\n                min: 0,\n                grid: {\n                  color: 'rgba(0, 0, 0, 0.1)'\n                }\n              },\n              y1: {\n                type: 'linear',\n                display: true,\n                position: 'right',\n                title: {\n                  display: true,\n                  text: '准确率 (%)',\n                  font: {\n                    size: 14,\n                    weight: 'bold'\n                  }\n                },\n                min: 0,\n                max: 100,\n                grid: {\n                  drawOnChartArea: false\n                }\n              }\n            }\n          }\n        };\n\n        // 创建图表\n        chart.value = new Chart(ctx, chartConfig);\n        console.log('图表创建成功');\n      } catch (error) {\n        console.error('创建图表失败:', error);\n        chartError.value = error.message;\n        destroyChart();\n      }\n    };\n\n    // 组件挂载时初始化\n    onMounted(async () => {\n      console.log('组件挂载，开始获取数据');\n      await refreshData();\n    });\n\n    // 组件卸载时清理\n    onUnmounted(() => {\n      console.log('组件卸载，清理资源');\n      if (autoRefreshInterval.value) {\n        clearInterval(autoRefreshInterval.value);\n        autoRefreshInterval.value = null;\n      }\n      destroyChart();\n    });\n    const __returned__ = {\n      chartCanvas,\n      chart,\n      trainingData,\n      trainingStatus,\n      loading,\n      autoRefresh,\n      autoRefreshInterval,\n      chartError,\n      fetchTrainingData,\n      fetchTrainingStatus,\n      refreshData,\n      toggleAutoRefresh,\n      getStatusText,\n      getStatusClass,\n      destroyChart,\n      retryChart,\n      createChart,\n      ref,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      get Chart() {\n        return Chart;\n      },\n      get getTrainingHistory() {\n        return getTrainingHistory;\n      },\n      get getTrainingStatus() {\n        return getTrainingStatus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["ref","onMounted","onUnmounted","nextTick","Chart","getTrainingHistory","getTrainingStatus","__default__","name","chartCanvas","chart","trainingData","trainingStatus","loading","autoRefresh","autoRefreshInterval","chartError","fetchTrainingData","value","response","data","success","console","log","length","createChart","error","fetchTrainingStatus","refreshData","Promise","all","toggleAutoRefresh","setInterval","clearInterval","getStatusText","status","statusMap","getStatusClass","classMap","destroyChart","destroy","warn","retryChart","Error","validData","filter","item","epoch","loss","accuracy","isNaN","epochs","map","losses","accuracies","ctx","getContext","chartConfig","type","labels","datasets","label","borderColor","backgroundColor","tension","yAxisID","fill","borderWidth","pointRadius","pointHoverRadius","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","title","display","text","font","size","weight","color","legend","position","usePointStyle","padding","tooltip","titleColor","bodyColor","cornerRadius","callbacks","context","dataset","parsed","y","includes","toFixed","scales","x","grid","min","y1","max","drawOnChartArea","message"],"sources":["E:/大三下学习资料/项目实训/MPHEDevCombine/MPHEDevFrontEnd/ParticipantFrontEnd/encryption/src/views/TrainingChart.vue"],"sourcesContent":["<template>\n  <div class=\"training-chart-container\">\n    <!-- 背景装饰 -->\n    <div class=\"background-decoration\"></div>\n    \n    <div class=\"content-wrapper\">\n      <div class=\"chart-header\">\n        <h2>训练进度监控</h2>\n        <div class=\"chart-controls\">\n          <button @click=\"refreshData\" :disabled=\"loading\" class=\"refresh-btn\">\n            <span class=\"btn-icon\">🔄</span>\n            {{ loading ? '加载中...' : '刷新数据' }}\n          </button>\n          <button @click=\"toggleAutoRefresh\" class=\"auto-refresh-btn\" :class=\"{ active: autoRefresh }\">\n            <span class=\"btn-icon\">{{ autoRefresh ? '⏹️' : '▶️' }}</span>\n            {{ autoRefresh ? '停止自动刷新' : '开始自动刷新' }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"status-info\" v-if=\"trainingStatus\">\n        <div class=\"status-card\">\n          <div class=\"card-header\">\n            <h3>📊 训练状态</h3>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"status-item\">\n              <span class=\"status-label\">状态:</span>\n              <span class=\"status-value\" :class=\"getStatusClass(trainingStatus.status)\">\n                {{ getStatusText(trainingStatus.status) }}\n              </span>\n            </div>\n            <div class=\"status-item\">\n              <span class=\"status-label\">总轮数:</span>\n              <span class=\"status-value\">{{ trainingStatus.totalEpochs }}</span>\n            </div>\n            <div class=\"status-item\" v-if=\"trainingStatus.lastEpoch\">\n              <span class=\"status-label\">最新轮次:</span>\n              <span class=\"status-value\">\n                {{ trainingStatus.lastEpoch.epoch }} \n                (损失: {{ trainingStatus.lastEpoch.loss.toFixed(4) }}, \n                准确率: {{ trainingStatus.lastEpoch.accuracy.toFixed(2) }}%)\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 只有在有数据时才显示图表容器 -->\n      <div class=\"chart-container\" v-if=\"trainingData.length > 0 && !chartError\">\n        <div class=\"chart-wrapper\">\n          <canvas ref=\"chartCanvas\"></canvas>\n        </div>\n      </div>\n\n      <!-- 图表错误提示 -->\n      <div class=\"chart-error\" v-if=\"chartError\">\n        <div class=\"error-icon\">⚠️</div>\n        <p>图表渲染失败: {{ chartError }}</p>\n        <button @click=\"retryChart\" class=\"retry-btn\">\n          <span class=\"btn-icon\">🔄</span>\n          重试图表\n        </button>\n      </div>\n\n      <!-- 无数据时显示提示 -->\n      <div class=\"no-data\" v-if=\"!loading && trainingData.length === 0\">\n        <div class=\"no-data-icon\">📈</div>\n        <p>暂无训练数据，请等待训练开始或检查后端连接</p>\n        <button @click=\"refreshData\" class=\"retry-btn\">\n          <span class=\"btn-icon\">🔄</span>\n          重试\n        </button>\n      </div>\n\n      <div class=\"data-table\" v-if=\"trainingData.length > 0\">\n        <div class=\"table-header\">\n          <h3>📋 训练数据详情</h3>\n        </div>\n        <div class=\"table-container\">\n          <table>\n            <thead>\n              <tr>\n                <th>轮次</th>\n                <th>损失值</th>\n                <th>准确率 (%)</th>\n                <th>学习率</th>\n                <th>用时</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in trainingData\" :key=\"item.epoch\">\n                <td>{{ item.epoch }}</td>\n                <td>{{ item.loss.toFixed(6) }}</td>\n                <td>{{ item.accuracy.toFixed(2) }}%</td>\n                <td>{{ item.learningRate.toFixed(6) }}</td>\n                <td>{{ item.epochTime }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue'\nimport Chart from 'chart.js/auto'\nimport { getTrainingHistory, getTrainingStatus } from '../api/training.js'\n\nconst chartCanvas = ref(null)\nconst chart = ref(null)\nconst trainingData = ref([])\nconst trainingStatus = ref(null)\nconst loading = ref(false)\nconst autoRefresh = ref(false)\nconst autoRefreshInterval = ref(null)\nconst chartError = ref(null)\n\n// 获取训练数据\nconst fetchTrainingData = async () => {\n  try {\n    loading.value = true\n    chartError.value = null\n    const response = await getTrainingHistory()\n    \n    if (response.data.success) {\n      trainingData.value = response.data.data || []\n      console.log('获取到训练数据:', trainingData.value.length, '条')\n      \n      // 如果有数据，尝试创建图表\n      if (trainingData.value.length > 0) {\n        await createChart()\n      }\n    }\n  } catch (error) {\n    console.error('获取训练数据失败:', error)\n    trainingData.value = []\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取训练状态\nconst fetchTrainingStatus = async () => {\n  try {\n    const response = await getTrainingStatus()\n    \n    if (response.data.success) {\n      trainingStatus.value = response.data\n    }\n  } catch (error) {\n    console.error('获取训练状态失败:', error)\n  }\n}\n\n// 刷新数据\nconst refreshData = async () => {\n  await Promise.all([fetchTrainingData(), fetchTrainingStatus()])\n}\n\n// 切换自动刷新\nconst toggleAutoRefresh = () => {\n  autoRefresh.value = !autoRefresh.value\n  \n  if (autoRefresh.value) {\n    autoRefreshInterval.value = setInterval(refreshData, 5000) // 每5秒刷新一次\n  } else {\n    if (autoRefreshInterval.value) {\n      clearInterval(autoRefreshInterval.value)\n      autoRefreshInterval.value = null\n    }\n  }\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  const statusMap = {\n    'idle': '空闲',\n    'completed': '已完成',\n    'training': '训练中'\n  }\n  return statusMap[status] || status\n}\n\n// 获取状态样式类\nconst getStatusClass = (status) => {\n  const classMap = {\n    'idle': 'status-idle',\n    'completed': 'status-completed',\n    'training': 'status-training'\n  }\n  return classMap[status] || ''\n}\n\n// 安全地销毁图表\nconst destroyChart = () => {\n  if (chart.value) {\n    try {\n      chart.value.destroy()\n      console.log('图表已销毁')\n    } catch (error) {\n      console.warn('销毁图表时出错:', error)\n    }\n    chart.value = null\n  }\n}\n\n// 重试图表\nconst retryChart = async () => {\n  chartError.value = null\n  if (trainingData.value.length > 0) {\n    await createChart()\n  }\n}\n\n// 创建图表\nconst createChart = async () => {\n  try {\n    // 等待DOM更新\n    await nextTick()\n    \n    // 检查canvas元素\n    if (!chartCanvas.value) {\n      throw new Error('Canvas元素不存在')\n    }\n    \n    // 销毁旧图表\n    destroyChart()\n    \n    // 验证数据\n    const validData = trainingData.value.filter(item => \n      item && \n      typeof item.epoch === 'number' && \n      typeof item.loss === 'number' && \n      typeof item.accuracy === 'number' &&\n      !isNaN(item.loss) && \n      !isNaN(item.accuracy)\n    )\n    \n    if (validData.length === 0) {\n      throw new Error('没有有效的训练数据')\n    }\n    \n    console.log('准备创建图表，有效数据:', validData.length, '条')\n    \n    // 准备数据\n    const epochs = validData.map(item => item.epoch)\n    const losses = validData.map(item => item.loss)\n    const accuracies = validData.map(item => item.accuracy)\n    \n    // 获取canvas上下文\n    const ctx = chartCanvas.value.getContext('2d')\n    if (!ctx) {\n      throw new Error('无法获取Canvas上下文')\n    }\n    \n    // 创建图表配置\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: epochs,\n        datasets: [\n          {\n            label: '平均损失',\n            data: losses,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.1)',\n            tension: 0.1,\n            yAxisID: 'y',\n            fill: false,\n            borderWidth: 3,\n            pointRadius: 6,\n            pointHoverRadius: 8\n          },\n          {\n            label: '平均准确率 (%)',\n            data: accuracies,\n            borderColor: 'rgb(54, 162, 235)',\n            backgroundColor: 'rgba(54, 162, 235, 0.1)',\n            tension: 0.1,\n            yAxisID: 'y1',\n            fill: false,\n            borderWidth: 3,\n            pointRadius: 6,\n            pointHoverRadius: 8\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          mode: 'index',\n          intersect: false,\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: '训练进度监控 - 损失值与准确率变化',\n            font: {\n              size: 18,\n              weight: 'bold'\n            },\n            color: '#1f2937'\n          },\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              usePointStyle: true,\n              padding: 20,\n              font: {\n                size: 14\n              }\n            }\n          },\n          tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            titleColor: '#ffffff',\n            bodyColor: '#ffffff',\n            borderColor: '#ffffff',\n            borderWidth: 1,\n            cornerRadius: 8,\n            callbacks: {\n              label: function(context) {\n                const label = context.dataset.label || ''\n                const value = context.parsed.y\n                if (label.includes('准确率')) {\n                  return `${label}: ${value.toFixed(2)}%`\n                } else {\n                  return `${label}: ${value.toFixed(6)}`\n                }\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: true,\n              text: '训练轮次',\n              font: {\n                size: 14,\n                weight: 'bold'\n              }\n            },\n            grid: {\n              color: 'rgba(0, 0, 0, 0.1)'\n            }\n          },\n          y: {\n            type: 'linear',\n            display: true,\n            position: 'left',\n            title: {\n              display: true,\n              text: '损失值',\n              font: {\n                size: 14,\n                weight: 'bold'\n              }\n            },\n            min: 0,\n            grid: {\n              color: 'rgba(0, 0, 0, 0.1)'\n            }\n          },\n          y1: {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            title: {\n              display: true,\n              text: '准确率 (%)',\n              font: {\n                size: 14,\n                weight: 'bold'\n              }\n            },\n            min: 0,\n            max: 100,\n            grid: {\n              drawOnChartArea: false,\n            },\n          }\n        }\n      }\n    }\n    \n    // 创建图表\n    chart.value = new Chart(ctx, chartConfig)\n    console.log('图表创建成功')\n    \n  } catch (error) {\n    console.error('创建图表失败:', error)\n    chartError.value = error.message\n    destroyChart()\n  }\n}\n\n// 组件挂载时初始化\nonMounted(async () => {\n  console.log('组件挂载，开始获取数据')\n  await refreshData()\n})\n\n// 组件卸载时清理\nonUnmounted(() => {\n  console.log('组件卸载，清理资源')\n  if (autoRefreshInterval.value) {\n    clearInterval(autoRefreshInterval.value)\n    autoRefreshInterval.value = null\n  }\n  destroyChart()\n})\n</script>\n\n<script>\nexport default {\n  name: 'TrainingChartPage'\n}\n</script>\n\n<style scoped>\n.training-chart-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n}\n\n.background-decoration {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: \n    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n    radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n    radial-gradient(circle at 40% 40%, rgba(120, 219, 226, 0.2) 0%, transparent 50%);\n  pointer-events: none;\n}\n\n.content-wrapper {\n  width: 100%;\n  max-width: 1200px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  box-shadow: \n    0 20px 40px rgba(0, 0, 0, 0.1),\n    0 0 1px rgba(255, 255, 255, 0.2);\n  padding: 30px;\n  position: relative;\n  z-index: 1;\n  animation: slideInUp 0.6s ease-out;\n}\n\n@keyframes slideInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  border-bottom: 2px solid rgba(102, 126, 234, 0.3);\n}\n\n.chart-header h2 {\n  margin: 0;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 2.2rem;\n  font-weight: 700;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.chart-controls {\n  display: flex;\n  gap: 15px;\n}\n\n.refresh-btn, .auto-refresh-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  position: relative;\n  overflow: hidden;\n}\n\n.refresh-btn {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n}\n\n.refresh-btn:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);\n}\n\n.refresh-btn:disabled {\n  background: linear-gradient(135deg, #9ca3af 0%, #6b7280 100%);\n  cursor: not-allowed;\n  transform: none;\n}\n\n.auto-refresh-btn {\n  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);\n  color: #374151;\n  border: 2px solid #d1d5db;\n}\n\n.auto-refresh-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\n.auto-refresh-btn.active {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  border-color: #10b981;\n  box-shadow: 0 8px 20px rgba(16, 185, 129, 0.4);\n}\n\n.btn-icon {\n  font-size: 16px;\n}\n\n.status-info {\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: center;\n}\n\n.status-card {\n  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n  border: 2px solid rgba(102, 126, 234, 0.3);\n  border-radius: 16px;\n  padding: 0;\n  max-width: 500px;\n  width: 100%;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  transition: all 0.3s ease;\n}\n\n.status-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n}\n\n.card-header {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 15px;\n  color: white;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1.3rem;\n  font-weight: 600;\n}\n\n.card-content {\n  padding: 20px;\n}\n\n.status-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  padding: 8px 0;\n}\n\n.status-item:last-child {\n  margin-bottom: 0;\n}\n\n.status-label {\n  font-weight: 600;\n  color: #374151;\n  font-size: 14px;\n}\n\n.status-value {\n  font-weight: 500;\n  color: #1f2937;\n  font-size: 14px;\n  padding: 4px 8px;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.8);\n}\n\n.status-idle {\n  background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);\n  color: white;\n}\n\n.status-completed {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n}\n\n.status-training {\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  color: white;\n}\n\n.chart-container {\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  border: 2px solid rgba(102, 126, 234, 0.3);\n  border-radius: 16px;\n  padding: 25px;\n  margin-bottom: 30px;\n  height: 500px;\n  position: relative;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.chart-container:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n}\n\n.chart-wrapper {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.chart-error {\n  background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);\n  border: 2px solid #fecaca;\n  border-radius: 16px;\n  padding: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  color: #dc2626;\n  box-shadow: 0 8px 20px rgba(220, 38, 38, 0.1);\n}\n\n.error-icon {\n  font-size: 48px;\n  margin-bottom: 15px;\n}\n\n.chart-error p {\n  margin: 0 0 20px 0;\n  font-weight: 600;\n  font-size: 16px;\n}\n\n.data-table {\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  border: 2px solid rgba(102, 126, 234, 0.3);\n  border-radius: 16px;\n  padding: 0;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.table-header {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n  color: white;\n}\n\n.table-header h3 {\n  margin: 0;\n  font-size: 1.3rem;\n  font-weight: 600;\n}\n\n.table-container {\n  padding: 20px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 14px;\n}\n\nth, td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid rgba(102, 126, 234, 0.2);\n}\n\nth {\n  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n  font-weight: 600;\n  color: #374151;\n  font-size: 14px;\n}\n\ntd {\n  color: #4b5563;\n  font-size: 13px;\n}\n\ntr:hover {\n  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n  transition: all 0.2s ease;\n}\n\n.no-data {\n  text-align: center;\n  padding: 60px 40px;\n  color: #6b7280;\n  background: linear-gradient(135deg, #f9fafb 0%, #f3f4f6 100%);\n  border-radius: 16px;\n  border: 2px dashed rgba(102, 126, 234, 0.3);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);\n}\n\n.no-data-icon {\n  font-size: 64px;\n  margin-bottom: 20px;\n  opacity: 0.6;\n}\n\n.no-data p {\n  margin: 0 0 20px 0;\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.retry-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 24px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n}\n\n.retry-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .content-wrapper {\n    padding: 20px;\n    margin: 10px;\n  }\n  \n  .chart-header {\n    flex-direction: column;\n    gap: 15px;\n    text-align: center;\n  }\n  \n  .chart-header h2 {\n    font-size: 1.8rem;\n  }\n  \n  .chart-controls {\n    flex-direction: column;\n    width: 100%;\n  }\n  \n  .refresh-btn, .auto-refresh-btn {\n    width: 100%;\n    justify-content: center;\n  }\n  \n  .status-card {\n    max-width: 100%;\n  }\n  \n  .chart-container {\n    height: 400px;\n    padding: 15px;\n  }\n  \n  .table-container {\n    padding: 15px;\n  }\n  \n  th, td {\n    padding: 8px 10px;\n    font-size: 12px;\n  }\n}\n\n@media (max-width: 480px) {\n  .training-chart-container {\n    padding: 10px;\n  }\n  \n  .content-wrapper {\n    padding: 15px;\n  }\n  \n  .chart-header h2 {\n    font-size: 1.5rem;\n  }\n  \n  .chart-container {\n    height: 350px;\n    padding: 10px;\n  }\n  \n  .status-card {\n    padding: 0;\n  }\n  \n  .card-content {\n    padding: 15px;\n  }\n  \n  .status-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 5px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}