{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"padding\": \"24px\",\n    \"max-width\": \"800px\",\n    \"margin\": \"auto\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin-bottom\": \"16px\"\n  }\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  style: {\n    \"margin-bottom\": \"16px\"\n  }\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = {\n  style: {\n    \"margin-top\": \"16px\"\n  }\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  style: {\n    \"margin-top\": \"16px\"\n  }\n};\nconst _hoisted_12 = {\n  style: {\n    \"margin-top\": \"16px\"\n  }\n};\nconst _hoisted_13 = {\n  key: 0\n};\nexport function render(_ctx, _cache) {\n  const _component_OnlineStatus = _resolveComponent(\"OnlineStatus\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"参与方首页\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"协调器IP: \", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.coordinatorIP = $event),\n    placeholder: \"输入协调器IP\",\n    style: {\n      \"width\": \"180px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.coordinatorIP]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.sendCoordinatorIP && _ctx.sendCoordinatorIP(...args))\n  }, \"推送本机IP\"), _ctx.coordinatorPushMsg ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(_ctx.coordinatorPushMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.connectWS && _ctx.connectWS(...args))\n  }, \"连接WebSocket\"), _ctx.wsStatus ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"(\" + _toDisplayString(_ctx.wsStatus) + \")\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _ctx.ipPush ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"本机信息\", -1 /* CACHED */)), _createElementVNode(\"div\", null, \"本机IP: \" + _toDisplayString(_ctx.ipPush.ip), 1 /* TEXT */), _createElementVNode(\"div\", null, \"本机端口: \" + _toDisplayString(_ctx.ipPush.port), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _ctx.registerMsg ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", null, \"注册状态: \" + _toDisplayString(_ctx.registerMsg), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _ctx.keygenProgress ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"密钥生成进度\", -1 /* CACHED */)), _createElementVNode(\"div\", null, \"步骤: \" + _toDisplayString(_ctx.keygenProgress.step), 1 /* TEXT */), _createElementVNode(\"div\", null, \"状态: \" + _toDisplayString(_ctx.keygenProgress.status), 1 /* TEXT */), _createElementVNode(\"div\", null, \"说明: \" + _toDisplayString(_ctx.keygenProgress.message), 1 /* TEXT */), _createElementVNode(\"div\", null, \"时间: \" + _toDisplayString(_ctx.keygenProgress.timestamp), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"自身状态\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.fetchSelfStatus && _ctx.fetchSelfStatus(...args))\n  }, \"查询\"), _ctx.selfStatus ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"pre\", null, _toDisplayString(_ctx.selfStatus), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_11, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", null, \"所有参与方在线状态\", -1 /* CACHED */)), _createVNode(_component_OnlineStatus)]), _createElementVNode(\"div\", _hoisted_12, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", null, \"协同解密/刷新请求\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.ciphertext = $event),\n    placeholder: \"密文 ciphertext\",\n    style: {\n      \"width\": \"300px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.ciphertext]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.targetParticipants = $event),\n    placeholder: \"目标参与方ID,逗号分隔\",\n    style: {\n      \"width\": \"180px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.targetParticipants]]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => _ctx.collaborativeDecrypt && _ctx.collaborativeDecrypt(...args))\n  }, \"协同解密\"), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => _ctx.collaborativeRefresh && _ctx.collaborativeRefresh(...args))\n  }, \"协同刷新\"), _ctx.collabResp ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"pre\", null, _toDisplayString(_ctx.collabResp), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","coordinatorIP","$event","placeholder","onClick","_cache","args","sendCoordinatorIP","coordinatorPushMsg","_hoisted_3","_toDisplayString","_hoisted_4","connectWS","wsStatus","_hoisted_5","ipPush","_hoisted_6","ip","port","registerMsg","_hoisted_7","keygenProgress","_hoisted_8","step","status","message","timestamp","_hoisted_9","fetchSelfStatus","selfStatus","_hoisted_10","_hoisted_11","_createVNode","_component_OnlineStatus","_hoisted_12","ciphertext","targetParticipants","collaborativeDecrypt","collaborativeRefresh","collabResp","_hoisted_13"],"sources":["D:\\down\\MPHEDEV\\encryption_par\\src\\App.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 24px; max-width: 800px; margin: auto;\">\n    <h2>参与方首页</h2>\n    <div style=\"margin-bottom: 16px;\">\n      <label>协调器IP: </label>\n      <input v-model=\"coordinatorIP\" placeholder=\"输入协调器IP\" style=\"width: 180px;\" />\n      <button @click=\"sendCoordinatorIP\">推送本机IP</button>\n      <span v-if=\"coordinatorPushMsg\">{{ coordinatorPushMsg }}</span>\n    </div>\n    <div style=\"margin-bottom: 16px;\">\n      <button @click=\"connectWS\">连接WebSocket</button>\n      <span v-if=\"wsStatus\">({{ wsStatus }})</span>\n    </div>\n    <div v-if=\"ipPush\">\n      <h3>本机信息</h3>\n      <div>本机IP: {{ ipPush.ip }}</div>\n      <div>本机端口: {{ ipPush.port }}</div>\n    </div>\n    <div v-if=\"registerMsg\">\n      <div>注册状态: {{ registerMsg }}</div>\n    </div>\n    <div v-if=\"keygenProgress\">\n      <h3>密钥生成进度</h3>\n      <div>步骤: {{ keygenProgress.step }}</div>\n      <div>状态: {{ keygenProgress.status }}</div>\n      <div>说明: {{ keygenProgress.message }}</div>\n      <div>时间: {{ keygenProgress.timestamp }}</div>\n    </div>\n    <div style=\"margin-top: 16px;\">\n      <h3>自身状态</h3>\n      <button @click=\"fetchSelfStatus\">查询</button>\n      <div v-if=\"selfStatus\">\n        <pre>{{ selfStatus }}</pre>\n      </div>\n    </div>\n    <div style=\"margin-top: 16px;\">\n      <h3>所有参与方在线状态</h3>\n      <OnlineStatus />\n    </div>\n    <div style=\"margin-top: 16px;\">\n      <h3>协同解密/刷新请求</h3>\n      <input v-model=\"ciphertext\" placeholder=\"密文 ciphertext\" style=\"width: 300px;\" />\n      <input v-model=\"targetParticipants\" placeholder=\"目标参与方ID,逗号分隔\" style=\"width: 180px;\" />\n      <button @click=\"collaborativeDecrypt\">协同解密</button>\n      <button @click=\"collaborativeRefresh\">协同刷新</button>\n      <div v-if=\"collabResp\">\n        <pre>{{ collabResp }}</pre>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref } from 'vue'\nimport {\n  getSelfStatus,\n  getOnlineStatus,\n  collaborativeDecrypt,\n  collaborativeRefresh\n} from './api/participant'\nimport OnlineStatus from './components/OnlineStatus.vue'\n\nconst ws = ref(null)\nconst wsStatus = ref('未连接')\nconst ipPush = ref(null)\nconst keygenProgress = ref(null)\nconst coordinatorIP = ref('')\nconst coordinatorPushMsg = ref('')\nconst registerMsg = ref('')\n\nfunction connectWS() {\n  if (ws.value) ws.value.close()\n  ws.value = new WebSocket('ws://localhost:8061/api/participant/ws')\n  ws.value.onopen = () => { wsStatus.value = '已连接' }\n  ws.value.onclose = () => { wsStatus.value = '已断开' }\n  ws.value.onerror = () => { wsStatus.value = '连接错误' }\n  ws.value.onmessage = (event) => {\n    const msg = JSON.parse(event.data)\n    if (msg.type === 'ip') {\n      ipPush.value = msg\n      coordinatorPushMsg.value = '本机IP已推送到协调器'\n    } else if (msg.type === 'keygen_progress') {\n      keygenProgress.value = msg\n    } else if (msg.type === 'register') {\n      registerMsg.value = msg.message || '注册成功'\n    }\n  }\n}\n\nfunction sendCoordinatorIP() {\n  if (ws.value && ws.value.readyState === 1) {\n    ws.value.send(JSON.stringify({\n      type: 'coordinator_ip',\n      coordinator_ip: coordinatorIP.value\n    }))\n    coordinatorPushMsg.value = '已发送，等待协调器响应...'\n  } else {\n    coordinatorPushMsg.value = '请先连接WebSocket'\n  }\n}\n\n// 自身状态\nconst selfStatus = ref('')\nasync function fetchSelfStatus() {\n  const res = await getSelfStatus()\n  selfStatus.value = JSON.stringify(res.data, null, 2)\n}\n\n// 协同解密/刷新\nconst ciphertext = ref('')\nconst targetParticipants = ref('')\nconst collabResp = ref('')\nasync function collaborativeDecryptApi({ ciphertext, target_participants }) {\n  // 这里应调用后端API，原本 collaborativeDecrypt 变量名冲突，改为 collaborativeDecryptApi\n  // 你可以根据实际API实现调整\n  return await collaborativeDecrypt({ ciphertext, target_participants })\n}\nasync function collaborativeRefreshApi({ ciphertext, target_participants }) {\n  // 这里应调用后端API，原本 collaborativeRefresh 变量名冲突，改为 collaborativeRefreshApi\n  return await collaborativeRefresh({ ciphertext, target_participants })\n}\nasync function collaborativeDecrypt() {\n  const ids = targetParticipants.value.split(',').map(s => parseInt(s)).filter(Boolean)\n  const res = await collaborativeDecryptApi({\n    ciphertext: ciphertext.value,\n    target_participants: ids\n  })\n  collabResp.value = JSON.stringify(res.data, null, 2)\n}\nasync function collaborativeRefresh() {\n  const ids = targetParticipants.value.split(',').map(s => parseInt(s)).filter(Boolean)\n  const res = await collaborativeRefreshApi({\n    ciphertext: ciphertext.value,\n    target_participants: ids\n  })\n  collabResp.value = JSON.stringify(res.data, null, 2)\n}\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}