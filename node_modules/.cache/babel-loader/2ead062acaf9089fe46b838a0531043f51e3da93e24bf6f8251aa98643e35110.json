{"ast":null,"code":"import { ref, onMounted, onUnmounted, computed, watch } from 'vue';\nimport { getBackendOutput } from '../api/participant';\nexport default {\n  __name: 'BackendOutput',\n  props: {\n    participantId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const output = ref('');\n    const isLoading = ref(false);\n    const autoRefresh = ref(false);\n    const lastUpdateTime = ref('');\n    const refreshInterval = ref(null);\n\n    // 根据参与方ID计算层标题\n    const layerTitle = computed(() => {\n      switch (props.participantId) {\n        case 1:\n          return '输入层 (Input Layer) - 参与方 #1';\n        case 2:\n          return '隐藏层 (Hidden Layer) - 参与方 #2';\n        case 3:\n          return '输出层 (Output Layer) - 参与方 #3';\n        default:\n          return `参与方 #${props.participantId}`;\n      }\n    });\n\n    // 计算输出行数\n    const outputLines = computed(() => {\n      if (!output.value) return 0;\n      return output.value.split('\\n').length;\n    });\n\n    // 刷新输出\n    async function refreshOutput() {\n      if (isLoading.value) return;\n      isLoading.value = true;\n      try {\n        console.log('🔍 BackendOutput: 开始获取后端输出...');\n        console.log('🔍 BackendOutput: 当前环境变量:', {\n          BACKEND_PORT: window.BACKEND_PORT,\n          FRONTEND_PORT: window.FRONTEND_PORT,\n          COORDINATOR_PORT: window.COORDINATOR_PORT\n        });\n        console.log('🔍 BackendOutput: 当前URL:', window.location.href);\n        console.log('🔍 BackendOutput: 当前端口:', window.location.port);\n        const response = await getBackendOutput();\n        console.log('🔍 BackendOutput: 后端响应:', response);\n\n        // 简化响应处理逻辑\n        if (response && response.data) {\n          // 直接显示后端返回的输出内容\n          if (typeof response.data.output === 'string') {\n            output.value = response.data.output;\n          } else if (typeof response.data === 'string') {\n            output.value = response.data;\n          } else {\n            // 如果是对象，转换为JSON字符串显示\n            output.value = JSON.stringify(response.data, null, 2);\n          }\n          console.log('🔍 BackendOutput: 设置输出内容:', output.value);\n        } else {\n          output.value = '后端返回了空响应';\n        }\n        lastUpdateTime.value = new Date().toLocaleString('zh-CN');\n      } catch (error) {\n        console.error('🔍 BackendOutput: 获取后端输出失败:', error);\n        console.error('🔍 BackendOutput: 错误详情:', {\n          name: error.name,\n          message: error.message,\n          stack: error.stack,\n          config: error.config\n        });\n\n        // 简化错误处理\n        if (error.response) {\n          // 服务器返回了错误状态码\n          output.value = `服务器错误 (${error.response.status}): ${error.response.data?.error || error.response.statusText}`;\n        } else if (error.request) {\n          // 请求已发出但没有收到响应\n          output.value = `网络错误: 无法连接到后端服务器`;\n        } else {\n          // 其他错误\n          output.value = `请求错误: ${error.message}`;\n        }\n        lastUpdateTime.value = new Date().toLocaleString('zh-CN');\n      } finally {\n        isLoading.value = false;\n      }\n    }\n\n    // 清空输出\n    function clearOutput() {\n      output.value = '';\n      lastUpdateTime.value = '';\n    }\n\n    // 启动自动刷新\n    function startAutoRefresh() {\n      if (refreshInterval.value) {\n        clearInterval(refreshInterval.value);\n      }\n      refreshInterval.value = setInterval(refreshOutput, 5000);\n    }\n\n    // 停止自动刷新\n    function stopAutoRefresh() {\n      if (refreshInterval.value) {\n        clearInterval(refreshInterval.value);\n        refreshInterval.value = null;\n      }\n    }\n\n    // 监听自动刷新开关\n    watch(autoRefresh, newValue => {\n      if (newValue) {\n        startAutoRefresh();\n      } else {\n        stopAutoRefresh();\n      }\n    });\n\n    // 组件挂载时获取一次输出\n    onMounted(() => {\n      refreshOutput();\n    });\n\n    // 组件卸载时清理定时器\n    onUnmounted(() => {\n      if (refreshInterval.value) {\n        clearInterval(refreshInterval.value);\n      }\n    });\n    const __returned__ = {\n      props,\n      output,\n      isLoading,\n      autoRefresh,\n      lastUpdateTime,\n      refreshInterval,\n      layerTitle,\n      outputLines,\n      refreshOutput,\n      clearOutput,\n      startAutoRefresh,\n      stopAutoRefresh,\n      ref,\n      onMounted,\n      onUnmounted,\n      computed,\n      watch,\n      get getBackendOutput() {\n        return getBackendOutput;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","computed","watch","getBackendOutput","props","__props","output","isLoading","autoRefresh","lastUpdateTime","refreshInterval","layerTitle","participantId","outputLines","value","split","length","refreshOutput","console","log","BACKEND_PORT","window","FRONTEND_PORT","COORDINATOR_PORT","location","href","port","response","data","JSON","stringify","Date","toLocaleString","error","name","message","stack","config","status","statusText","request","clearOutput","startAutoRefresh","clearInterval","setInterval","stopAutoRefresh","newValue"],"sources":["E:/大三下学习资料/项目实训/MPHEDevCombine/MPHEDevFrontEnd/ParticipantFrontEnd/encryption/src/components/BackendOutput.vue"],"sourcesContent":["<template>\n  <div class=\"backend-output\">\n    <div class=\"header\">\n      <h3>{{ layerTitle }}</h3>\n      <div class=\"controls\">\n        <button @click=\"refreshOutput\" :disabled=\"isLoading\">\n          {{ isLoading ? '刷新中...' : '刷新输出' }}\n        </button>\n        <button @click=\"clearOutput\">清空</button>\n        <label>\n          <input type=\"checkbox\" v-model=\"autoRefresh\" />\n          自动刷新 (5秒)\n        </label>\n      </div>\n    </div>\n    \n    <div class=\"output-container\">\n      <div v-if=\"isLoading && !output\" class=\"loading\">\n        正在获取后端输出...\n      </div>\n      \n      <div v-else-if=\"!output\" class=\"no-output\">\n        暂无输出，点击\"刷新输出\"按钮获取最新信息\n      </div>\n      \n      <div v-else class=\"output-content\">\n        <div class=\"output-header\">\n          <span class=\"timestamp\">最后更新: {{ lastUpdateTime }}</span>\n          <span class=\"output-count\">输出行数: {{ outputLines }}</span>\n        </div>\n        <pre class=\"output-text\">{{ output }}</pre>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, computed, watch } from 'vue'\nimport { getBackendOutput } from '../api/participant'\n\nconst props = defineProps({\n  participantId: {\n    type: Number,\n    required: true\n  }\n})\n\nconst output = ref('')\nconst isLoading = ref(false)\nconst autoRefresh = ref(false)\nconst lastUpdateTime = ref('')\nconst refreshInterval = ref(null)\n\n// 根据参与方ID计算层标题\nconst layerTitle = computed(() => {\n  switch (props.participantId) {\n    case 1:\n      return '输入层 (Input Layer) - 参与方 #1'\n    case 2:\n      return '隐藏层 (Hidden Layer) - 参与方 #2'\n    case 3:\n      return '输出层 (Output Layer) - 参与方 #3'\n    default:\n      return `参与方 #${props.participantId}`\n  }\n})\n\n// 计算输出行数\nconst outputLines = computed(() => {\n  if (!output.value) return 0\n  return output.value.split('\\n').length\n})\n\n// 刷新输出\nasync function refreshOutput() {\n  if (isLoading.value) return\n  \n  isLoading.value = true\n  try {\n    console.log('🔍 BackendOutput: 开始获取后端输出...')\n    console.log('🔍 BackendOutput: 当前环境变量:', {\n      BACKEND_PORT: window.BACKEND_PORT,\n      FRONTEND_PORT: window.FRONTEND_PORT,\n      COORDINATOR_PORT: window.COORDINATOR_PORT\n    })\n    console.log('🔍 BackendOutput: 当前URL:', window.location.href)\n    console.log('🔍 BackendOutput: 当前端口:', window.location.port)\n    \n    const response = await getBackendOutput()\n    console.log('🔍 BackendOutput: 后端响应:', response)\n    \n    // 简化响应处理逻辑\n    if (response && response.data) {\n      // 直接显示后端返回的输出内容\n      if (typeof response.data.output === 'string') {\n        output.value = response.data.output\n      } else if (typeof response.data === 'string') {\n        output.value = response.data\n      } else {\n        // 如果是对象，转换为JSON字符串显示\n        output.value = JSON.stringify(response.data, null, 2)\n      }\n      console.log('🔍 BackendOutput: 设置输出内容:', output.value)\n    } else {\n      output.value = '后端返回了空响应'\n    }\n    lastUpdateTime.value = new Date().toLocaleString('zh-CN')\n  } catch (error) {\n    console.error('🔍 BackendOutput: 获取后端输出失败:', error)\n    console.error('🔍 BackendOutput: 错误详情:', {\n      name: error.name,\n      message: error.message,\n      stack: error.stack,\n      config: error.config\n    })\n    \n    // 简化错误处理\n    if (error.response) {\n      // 服务器返回了错误状态码\n      output.value = `服务器错误 (${error.response.status}): ${error.response.data?.error || error.response.statusText}`\n    } else if (error.request) {\n      // 请求已发出但没有收到响应\n      output.value = `网络错误: 无法连接到后端服务器`\n    } else {\n      // 其他错误\n      output.value = `请求错误: ${error.message}`\n    }\n    lastUpdateTime.value = new Date().toLocaleString('zh-CN')\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// 清空输出\nfunction clearOutput() {\n  output.value = ''\n  lastUpdateTime.value = ''\n}\n\n// 启动自动刷新\nfunction startAutoRefresh() {\n  if (refreshInterval.value) {\n    clearInterval(refreshInterval.value)\n  }\n  refreshInterval.value = setInterval(refreshOutput, 5000)\n}\n\n// 停止自动刷新\nfunction stopAutoRefresh() {\n  if (refreshInterval.value) {\n    clearInterval(refreshInterval.value)\n    refreshInterval.value = null\n  }\n}\n\n// 监听自动刷新开关\nwatch(autoRefresh, (newValue) => {\n  if (newValue) {\n    startAutoRefresh()\n  } else {\n    stopAutoRefresh()\n  }\n})\n\n// 组件挂载时获取一次输出\nonMounted(() => {\n  refreshOutput()\n})\n\n// 组件卸载时清理定时器\nonUnmounted(() => {\n  if (refreshInterval.value) {\n    clearInterval(refreshInterval.value)\n  }\n})\n</script>\n\n<style scoped>\n.backend-output {\n  background: rgba(255,255,255,0.95);\n  backdrop-filter: blur(25px);\n  border: 1px solid rgba(255,255,255,0.3);\n  border-radius: 25px;\n  padding: 30px;\n  margin-bottom: 20px;\n  box-shadow: 0 15px 50px rgba(0,0,0,0.12);\n  transition: all 0.4s cubic-bezier(0.4,0,0.2,1);\n  position: relative;\n  overflow: hidden;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 25px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid rgba(102,126,234,0.1);\n}\n\n.header h3 {\n  margin: 0;\n  color: #1e293b;\n  font-size: 1.4rem;\n  font-weight: 800;\n  letter-spacing: -0.01em;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.controls {\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.controls button {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 24px;\n  border: none;\n  border-radius: 18px;\n  font-size: 0.95rem;\n  font-weight: 700;\n  cursor: pointer;\n  transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 25px rgba(102,126,234,0.08);\n}\n.controls button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.25), transparent);\n  transition: left 0.6s;\n}\n.controls button:hover::before {\n  left: 100%;\n}\n.controls button:first-child {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n}\n.controls button:first-child:hover:not(:disabled) {\n  transform: translateY(-3px) scale(1.05);\n  box-shadow: 0 15px 35px rgba(102,126,234,0.15);\n}\n.controls button:nth-child(2) {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n  color: white;\n}\n.controls button:nth-child(2):hover {\n  transform: translateY(-3px) scale(1.05);\n  box-shadow: 0 15px 35px rgba(239,68,68,0.15);\n}\n.controls button:disabled {\n  background: linear-gradient(135deg, #9ca3af 0%, #6b7280 100%);\n  color: rgba(255,255,255,0.7);\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: 0 4px 15px rgba(156,163,175,0.3);\n}\n.controls label {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 0.9rem;\n  color: #374151;\n  font-weight: 600;\n  padding: 12px 20px;\n  background: rgba(255,255,255,0.8);\n  border: 1px solid rgba(102,126,234,0.15);\n  border-radius: 18px;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n}\n.controls label:hover {\n  background: rgba(255,255,255,1);\n  border-color: rgba(102,126,234,0.4);\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(102,126,234,0.1);\n}\n.controls input[type=\"checkbox\"] {\n  width: 18px;\n  height: 18px;\n  accent-color: #667eea;\n  cursor: pointer;\n}\n\n.output-container {\n  min-height: 250px;\n  background: rgba(255,255,255,0.8);\n  border-radius: 20px;\n  border: 1px solid rgba(102,126,234,0.1);\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n}\n.output-container:hover {\n  background: rgba(255,255,255,1);\n  border-color: rgba(102,126,234,0.2);\n  box-shadow: 0 8px 25px rgba(102,126,234,0.05);\n}\n.loading, .no-output {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 250px;\n  color: #6b7280;\n  font-style: italic;\n  font-size: 1.1rem;\n  font-weight: 500;\n  background: linear-gradient(135deg, rgba(102,126,234,0.05) 0%, rgba(118,75,162,0.05) 100%);\n}\n.output-content {\n  background: rgba(255,255,255,1);\n  border-radius: 20px;\n  overflow: hidden;\n  box-shadow: 0 4px 20px rgba(0,0,0,0.05);\n}\n.output-header {\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 20px;\n  background: linear-gradient(135deg, rgba(102,126,234,0.1) 0%, rgba(118,75,162,0.1) 100%);\n  border-bottom: 1px solid rgba(102,126,234,0.1);\n  font-size: 0.85rem;\n  color: #374151;\n  font-weight: 600;\n}\n.output-text {\n  margin: 0;\n  padding: 20px;\n  background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n  color: #e2e8f0;\n  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;\n  font-size: 0.9rem;\n  line-height: 1.6;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  max-height: 400px;\n  overflow-y: auto;\n  border-radius: 0 0 20px 20px;\n}\n.output-text::-webkit-scrollbar {\n  width: 8px;\n}\n.output-text::-webkit-scrollbar-track {\n  background: rgba(255,255,255,0.5);\n  border-radius: 4px;\n}\n.output-text::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 4px;\n}\n.output-text::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);\n}\n\n@media (max-width: 768px) {\n  .backend-output {\n    padding: 20px;\n  }\n  .header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 15px;\n  }\n  .controls {\n    width: 100%;\n    justify-content: space-between;\n  }\n  .controls button {\n    padding: 10px 18px;\n    font-size: 0.85rem;\n  }\n  .controls label {\n    padding: 10px 15px;\n    font-size: 0.8rem;\n  }\n  .output-header {\n    flex-direction: column;\n    gap: 8px;\n    align-items: flex-start;\n  }\n}\n</style> "],"mappings":"AAqCA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAI;AACjE,SAASC,gBAAgB,QAAQ,oBAAmB;;;;;;;;;;;;;IAEpD,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,MAAM,GAAGR,GAAG,CAAC,EAAE;IACrB,MAAMS,SAAS,GAAGT,GAAG,CAAC,KAAK;IAC3B,MAAMU,WAAW,GAAGV,GAAG,CAAC,KAAK;IAC7B,MAAMW,cAAc,GAAGX,GAAG,CAAC,EAAE;IAC7B,MAAMY,eAAe,GAAGZ,GAAG,CAAC,IAAI;;IAEhC;IACA,MAAMa,UAAU,GAAGV,QAAQ,CAAC,MAAM;MAChC,QAAQG,KAAK,CAACQ,aAAa;QACzB,KAAK,CAAC;UACJ,OAAO,4BAA2B;QACpC,KAAK,CAAC;UACJ,OAAO,6BAA4B;QACrC,KAAK,CAAC;UACJ,OAAO,6BAA4B;QACrC;UACE,OAAO,QAAQR,KAAK,CAACQ,aAAa,EAAC;MACvC;IACF,CAAC;;IAED;IACA,MAAMC,WAAW,GAAGZ,QAAQ,CAAC,MAAM;MACjC,IAAI,CAACK,MAAM,CAACQ,KAAK,EAAE,OAAO;MAC1B,OAAOR,MAAM,CAACQ,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,MAAK;IACvC,CAAC;;IAED;IACA,eAAeC,aAAaA,CAAA,EAAG;MAC7B,IAAIV,SAAS,CAACO,KAAK,EAAE;MAErBP,SAAS,CAACO,KAAK,GAAG,IAAG;MACrB,IAAI;QACFI,OAAO,CAACC,GAAG,CAAC,+BAA+B;QAC3CD,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;UACvCC,YAAY,EAAEC,MAAM,CAACD,YAAY;UACjCE,aAAa,EAAED,MAAM,CAACC,aAAa;UACnCC,gBAAgB,EAAEF,MAAM,CAACE;QAC3B,CAAC;QACDL,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,MAAM,CAACG,QAAQ,CAACC,IAAI;QAC5DP,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,MAAM,CAACG,QAAQ,CAACE,IAAI;QAE3D,MAAMC,QAAQ,GAAG,MAAMxB,gBAAgB,CAAC;QACxCe,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,QAAQ;;QAE/C;QACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE;UAC7B;UACA,IAAI,OAAOD,QAAQ,CAACC,IAAI,CAACtB,MAAM,KAAK,QAAQ,EAAE;YAC5CA,MAAM,CAACQ,KAAK,GAAGa,QAAQ,CAACC,IAAI,CAACtB,MAAK;UACpC,CAAC,MAAM,IAAI,OAAOqB,QAAQ,CAACC,IAAI,KAAK,QAAQ,EAAE;YAC5CtB,MAAM,CAACQ,KAAK,GAAGa,QAAQ,CAACC,IAAG;UAC7B,CAAC,MAAM;YACL;YACAtB,MAAM,CAACQ,KAAK,GAAGe,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACC,IAAI,EAAE,IAAI,EAAE,CAAC;UACtD;UACAV,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEb,MAAM,CAACQ,KAAK;QACvD,CAAC,MAAM;UACLR,MAAM,CAACQ,KAAK,GAAG,UAAS;QAC1B;QACAL,cAAc,CAACK,KAAK,GAAG,IAAIiB,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,OAAO;MAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdf,OAAO,CAACe,KAAK,CAAC,6BAA6B,EAAEA,KAAK;QAClDf,OAAO,CAACe,KAAK,CAAC,yBAAyB,EAAE;UACvCC,IAAI,EAAED,KAAK,CAACC,IAAI;UAChBC,OAAO,EAAEF,KAAK,CAACE,OAAO;UACtBC,KAAK,EAAEH,KAAK,CAACG,KAAK;UAClBC,MAAM,EAAEJ,KAAK,CAACI;QAChB,CAAC;;QAED;QACA,IAAIJ,KAAK,CAACN,QAAQ,EAAE;UAClB;UACArB,MAAM,CAACQ,KAAK,GAAG,UAAUmB,KAAK,CAACN,QAAQ,CAACW,MAAM,MAAML,KAAK,CAACN,QAAQ,CAACC,IAAI,EAAEK,KAAK,IAAIA,KAAK,CAACN,QAAQ,CAACY,UAAU,EAAC;QAC9G,CAAC,MAAM,IAAIN,KAAK,CAACO,OAAO,EAAE;UACxB;UACAlC,MAAM,CAACQ,KAAK,GAAG,kBAAiB;QAClC,CAAC,MAAM;UACL;UACAR,MAAM,CAACQ,KAAK,GAAG,SAASmB,KAAK,CAACE,OAAO,EAAC;QACxC;QACA1B,cAAc,CAACK,KAAK,GAAG,IAAIiB,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,OAAO;MAC1D,CAAC,SAAS;QACRzB,SAAS,CAACO,KAAK,GAAG,KAAI;MACxB;IACF;;IAEA;IACA,SAAS2B,WAAWA,CAAA,EAAG;MACrBnC,MAAM,CAACQ,KAAK,GAAG,EAAC;MAChBL,cAAc,CAACK,KAAK,GAAG,EAAC;IAC1B;;IAEA;IACA,SAAS4B,gBAAgBA,CAAA,EAAG;MAC1B,IAAIhC,eAAe,CAACI,KAAK,EAAE;QACzB6B,aAAa,CAACjC,eAAe,CAACI,KAAK;MACrC;MACAJ,eAAe,CAACI,KAAK,GAAG8B,WAAW,CAAC3B,aAAa,EAAE,IAAI;IACzD;;IAEA;IACA,SAAS4B,eAAeA,CAAA,EAAG;MACzB,IAAInC,eAAe,CAACI,KAAK,EAAE;QACzB6B,aAAa,CAACjC,eAAe,CAACI,KAAK;QACnCJ,eAAe,CAACI,KAAK,GAAG,IAAG;MAC7B;IACF;;IAEA;IACAZ,KAAK,CAACM,WAAW,EAAGsC,QAAQ,IAAK;MAC/B,IAAIA,QAAQ,EAAE;QACZJ,gBAAgB,CAAC;MACnB,CAAC,MAAM;QACLG,eAAe,CAAC;MAClB;IACF,CAAC;;IAED;IACA9C,SAAS,CAAC,MAAM;MACdkB,aAAa,CAAC;IAChB,CAAC;;IAED;IACAjB,WAAW,CAAC,MAAM;MAChB,IAAIU,eAAe,CAACI,KAAK,EAAE;QACzB6B,aAAa,CAACjC,eAAe,CAACI,KAAK;MACrC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}