{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"协同解密/刷新\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.ciphertext = $event),\n    placeholder: \"密文\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.ciphertext]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.target = $event),\n    placeholder: \"目标参与方ID,逗号分隔\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.target]]), _createElementVNode(\"button\", {\n    onClick: $setup.decrypt\n  }, \"解密\"), _createElementVNode(\"button\", {\n    onClick: $setup.refresh\n  }, \"刷新\"), $setup.result ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($setup.result), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","$setup","ciphertext","$event","placeholder","target","onClick","decrypt","refresh","result","_hoisted_1","_toDisplayString"],"sources":["D:\\down\\MPHEDEV\\encryption_par\\src\\components\\CollaborativePanel.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3>协同解密/刷新</h3>\r\n    <input v-model=\"ciphertext\" placeholder=\"密文\" />\r\n    <input v-model=\"target\" placeholder=\"目标参与方ID,逗号分隔\" />\r\n    <button @click=\"decrypt\">解密</button>\r\n    <button @click=\"refresh\">刷新</button>\r\n    <div v-if=\"result\">{{ result }}</div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { collaborativeDecrypt, collaborativeRefresh } from '../api/participant'\r\n\r\nconst ciphertext = ref('')\r\nconst target = ref('')\r\nconst result = ref('')\r\n\r\nasync function decrypt() {\r\n  const res = await collaborativeDecrypt({\r\n    ciphertext: ciphertext.value,\r\n    target_participants: target.value.split(',').map(Number)\r\n  })\r\n  result.value = res.data.message\r\n}\r\n\r\nasync function refresh() {\r\n  const res = await collaborativeRefresh({\r\n    ciphertext: ciphertext.value,\r\n    target_participants: target.value.split(',').map(Number)\r\n  })\r\n  result.value = res.data.message\r\n}\r\n</script>\r\n"],"mappings":";;;;;uBACEA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAgB,YAAZ,SAAO,qB,gBACXA,mBAAA,CAA+C;+DAA/BC,MAAA,CAAAC,UAAU,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAxBH,MAAA,CAAAC,UAAU,E,mBAC1BF,mBAAA,CAAqD;+DAArCC,MAAA,CAAAI,MAAM,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAApBH,MAAA,CAAAI,MAAM,E,GACtBL,mBAAA,CAAoC;IAA3BM,OAAK,EAAEL,MAAA,CAAAM;EAAO,GAAE,IAAE,GAC3BP,mBAAA,CAAoC;IAA3BM,OAAK,EAAEL,MAAA,CAAAO;EAAO,GAAE,IAAE,GAChBP,MAAA,CAAAQ,MAAM,I,cAAjBV,mBAAA,CAAqC,OAAAW,UAAA,EAAAC,gBAAA,CAAfV,MAAA,CAAAQ,MAAM,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}