{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nconst __default__ = {\n  name: 'HomePage'\n};\nexport default /*@__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const coordinatorIP = ref('');\n    const coordinatorPushMsg = ref('');\n    const selfStatus = ref('');\n    const unregisterMsg = ref('');\n    let ws = null;\n    async function sendCoordinatorIP() {\n      try {\n        await axios.post('/api/participant/set-coordinator-ip', {\n          coordinator_ip: coordinatorIP.value\n        });\n        coordinatorPushMsg.value = '协调器IP已发送';\n      } catch (e) {\n        coordinatorPushMsg.value = '发送失败';\n      }\n    }\n    async function fetchSelfStatus() {\n      try {\n        const res = await axios.get('/api/participant/status');\n        selfStatus.value = JSON.stringify(res.data, null, 2);\n      } catch (e) {\n        selfStatus.value = '查询失败';\n      }\n    }\n    function requestUnregister() {\n      if (!ws || ws.readyState !== 1) {\n        ws = new WebSocket('ws://localhost:8061/api/participant/ws');\n        ws.onopen = () => {\n          ws.send(JSON.stringify({\n            type: 'unregister'\n          }));\n          unregisterMsg.value = '已发送注销请求';\n        };\n        ws.onerror = () => {\n          unregisterMsg.value = 'WebSocket 连接失败';\n        };\n      } else {\n        ws.send(JSON.stringify({\n          type: 'unregister'\n        }));\n        unregisterMsg.value = '已发送注销请求';\n      }\n    }\n    const __returned__ = {\n      coordinatorIP,\n      coordinatorPushMsg,\n      selfStatus,\n      unregisterMsg,\n      get ws() {\n        return ws;\n      },\n      set ws(v) {\n        ws = v;\n      },\n      sendCoordinatorIP,\n      fetchSelfStatus,\n      requestUnregister,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["ref","axios","__default__","name","coordinatorIP","coordinatorPushMsg","selfStatus","unregisterMsg","ws","sendCoordinatorIP","post","coordinator_ip","value","e","fetchSelfStatus","res","get","JSON","stringify","data","requestUnregister","readyState","WebSocket","onopen","send","type","onerror"],"sources":["D:/down/MPHEDEV/encryption_par/src/views/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>参与方首页</h2>\r\n    <div style=\"margin-bottom: 16px;\">\r\n      <label>协调器IP: </label>\r\n      <input v-model=\"coordinatorIP\" placeholder=\"输入协调器IP\" style=\"width: 180px;\" />\r\n      <button @click=\"sendCoordinatorIP\">发送协调器IP</button>\r\n      <span v-if=\"coordinatorPushMsg\">{{ coordinatorPushMsg }}</span>\r\n    </div>\r\n    <div style=\"margin-bottom: 16px;\">\r\n      <button @click=\"fetchSelfStatus\">查询自身状态</button>\r\n      <span v-if=\"selfStatus\"><pre>{{ selfStatus }}</pre></span>\r\n    </div>\r\n    <div style=\"margin-bottom: 16px;\">\r\n      <button @click=\"requestUnregister\">退出</button>\r\n      <span v-if=\"unregisterMsg\">{{ unregisterMsg }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst coordinatorIP = ref('')\r\nconst coordinatorPushMsg = ref('')\r\nconst selfStatus = ref('')\r\nconst unregisterMsg = ref('')\r\nlet ws = null\r\n\r\nasync function sendCoordinatorIP() {\r\n  try {\r\n    await axios.post('/api/participant/set-coordinator-ip', { coordinator_ip: coordinatorIP.value })\r\n    coordinatorPushMsg.value = '协调器IP已发送'\r\n  } catch (e) {\r\n    coordinatorPushMsg.value = '发送失败'\r\n  }\r\n}\r\nasync function fetchSelfStatus() {\r\n  try {\r\n    const res = await axios.get('/api/participant/status')\r\n    selfStatus.value = JSON.stringify(res.data, null, 2)\r\n  } catch (e) {\r\n    selfStatus.value = '查询失败'\r\n  }\r\n}\r\nfunction requestUnregister() {\r\n  if (!ws || ws.readyState !== 1) {\r\n    ws = new WebSocket('ws://localhost:8061/api/participant/ws')\r\n    ws.onopen = () => {\r\n      ws.send(JSON.stringify({ type: 'unregister' }))\r\n      unregisterMsg.value = '已发送注销请求'\r\n    }\r\n    ws.onerror = () => {\r\n      unregisterMsg.value = 'WebSocket 连接失败'\r\n    }\r\n  } else {\r\n    ws.send(JSON.stringify({ type: 'unregister' }))\r\n    unregisterMsg.value = '已发送注销请求'\r\n  }\r\n}\r\n</script>\r\n<script>\r\nexport default {\r\n  name: 'HomePage',\r\n}\r\n</script> "],"mappings":"AAoBA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AAyCzB,MAAAC,WAAA,GAAe;EACbC,IAAI,EAAE;AACR,CAAC;;;;;;IAzCD,MAAMC,aAAa,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMK,kBAAkB,GAAGL,GAAG,CAAC,EAAE,CAAC;IAClC,MAAMM,UAAU,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMO,aAAa,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC7B,IAAIQ,EAAE,GAAG,IAAI;IAEb,eAAeC,iBAAiBA,CAAA,EAAG;MACjC,IAAI;QACF,MAAMR,KAAK,CAACS,IAAI,CAAC,qCAAqC,EAAE;UAAEC,cAAc,EAAEP,aAAa,CAACQ;QAAM,CAAC,CAAC;QAChGP,kBAAkB,CAACO,KAAK,GAAG,UAAU;MACvC,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVR,kBAAkB,CAACO,KAAK,GAAG,MAAM;MACnC;IACF;IACA,eAAeE,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,yBAAyB,CAAC;QACtDV,UAAU,CAACM,KAAK,GAAGK,IAAI,CAACC,SAAS,CAACH,GAAG,CAACI,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;MACtD,CAAC,CAAC,OAAON,CAAC,EAAE;QACVP,UAAU,CAACM,KAAK,GAAG,MAAM;MAC3B;IACF;IACA,SAASQ,iBAAiBA,CAAA,EAAG;MAC3B,IAAI,CAACZ,EAAE,IAAIA,EAAE,CAACa,UAAU,KAAK,CAAC,EAAE;QAC9Bb,EAAE,GAAG,IAAIc,SAAS,CAAC,wCAAwC,CAAC;QAC5Dd,EAAE,CAACe,MAAM,GAAG,MAAM;UAChBf,EAAE,CAACgB,IAAI,CAACP,IAAI,CAACC,SAAS,CAAC;YAAEO,IAAI,EAAE;UAAa,CAAC,CAAC,CAAC;UAC/ClB,aAAa,CAACK,KAAK,GAAG,SAAS;QACjC,CAAC;QACDJ,EAAE,CAACkB,OAAO,GAAG,MAAM;UACjBnB,aAAa,CAACK,KAAK,GAAG,gBAAgB;QACxC,CAAC;MACH,CAAC,MAAM;QACLJ,EAAE,CAACgB,IAAI,CAACP,IAAI,CAACC,SAAS,CAAC;UAAEO,IAAI,EAAE;QAAa,CAAC,CAAC,CAAC;QAC/ClB,aAAa,CAACK,KAAK,GAAG,SAAS;MACjC;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}