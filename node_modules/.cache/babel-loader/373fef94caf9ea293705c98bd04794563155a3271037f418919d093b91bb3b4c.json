{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"自身状态\", -1 /* CACHED */)), $setup.status ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, \"ID: \" + _toDisplayString($setup.status.id), 1 /* TEXT */), _createElementVNode(\"div\", null, \"IP: \" + _toDisplayString($setup.status.ip) + \":\" + _toDisplayString($setup.status.port), 1 /* TEXT */), _createElementVNode(\"div\", null, \"状态: \" + _toDisplayString($setup.status.status), 1 /* TEXT */), _createElementVNode(\"div\", null, \"数据分片: \" + _toDisplayString($setup.status.data_split), 1 /* TEXT */), _createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createTextVNode(\"参与方: \")), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.status.participants, (ip, id) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: id\n    }, _toDisplayString(id) + \":\" + _toDisplayString(ip), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $setup.allPorts.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"所有在线参与方端口:\", -1 /* CACHED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.allPorts, p => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: p.id\n    }, \"ID: \" + _toDisplayString(p.id) + \" | 端口: \" + _toDisplayString(p.port), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","$setup","status","_hoisted_1","_toDisplayString","id","ip","port","data_split","_Fragment","_renderList","participants","key","allPorts","length","_hoisted_2","p"],"sources":["D:\\down\\MPHEDEV\\encryption_par\\src\\components\\ParticipantStatus.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3>自身状态</h3>\r\n    <div v-if=\"status\">\r\n      <div>ID: {{ status.id }}</div>\r\n      <div>IP: {{ status.ip }}:{{ status.port }}</div>\r\n      <div>状态: {{ status.status }}</div>\r\n      <div>数据分片: {{ status.data_split }}</div>\r\n      <div>参与方: <span v-for=\"(ip, id) in status.participants\" :key=\"id\">{{ id }}:{{ ip }} </span></div>\r\n    </div>\r\n    <div v-if=\"allPorts.length\">\r\n      <h4>所有在线参与方端口:</h4>\r\n      <ul>\r\n        <li v-for=\"p in allPorts\" :key=\"p.id\">ID: {{ p.id }} | 端口: {{ p.port }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { getSelfStatus, getOnlineStatus } from '../api/participant'\r\n\r\nconst status = ref(null)\r\nconst allPorts = ref([])\r\n\r\nfunction extractPort(url) {\r\n  // url格式: http://ip:port\r\n  const match = url.match(/:(\\d+)(?:$|\\D)/)\r\n  return match ? match[1] : ''\r\n}\r\n\r\nonMounted(async () => {\r\n  const res = await getSelfStatus()\r\n  status.value = res.data\r\n\r\n  // 获取所有在线参与方端口\r\n  const onlineRes = await getOnlineStatus()\r\n  if (onlineRes.data && Array.isArray(onlineRes.data.participants)) {\r\n    allPorts.value = onlineRes.data.participants.map(p => ({\r\n      id: p.id,\r\n      port: extractPort(p.url)\r\n    }))\r\n  }\r\n})\r\n</script>\r\n"],"mappings":";;;;;;;;uBACEA,mBAAA,CAeM,c,0BAdJC,mBAAA,CAAa,YAAT,MAAI,qBACGC,MAAA,CAAAC,MAAM,I,cAAjBH,mBAAA,CAMM,OAAAI,UAAA,GALJH,mBAAA,CAA8B,aAAzB,MAAI,GAAAI,gBAAA,CAAGH,MAAA,CAAAC,MAAM,CAACG,EAAE,kBACrBL,mBAAA,CAAgD,aAA3C,MAAI,GAAAI,gBAAA,CAAGH,MAAA,CAAAC,MAAM,CAACI,EAAE,IAAG,GAAC,GAAAF,gBAAA,CAAGH,MAAA,CAAAC,MAAM,CAACK,IAAI,kBACvCP,mBAAA,CAAkC,aAA7B,MAAI,GAAAI,gBAAA,CAAGH,MAAA,CAAAC,MAAM,CAACA,MAAM,kBACzBF,mBAAA,CAAwC,aAAnC,QAAM,GAAAI,gBAAA,CAAGH,MAAA,CAAAC,MAAM,CAACM,UAAU,kBAC/BR,mBAAA,CAAiG,c,2CAA5F,OAAK,K,kBAAAD,mBAAA,CAAiFU,SAAA,QAAAC,WAAA,CAAxDT,MAAA,CAAAC,MAAM,CAACS,YAAY,GAA9BL,EAAE,EAAED,EAAE;yBAApBN,mBAAA,CAAiF;MAAlCa,GAAG,EAAEP;IAAE,GAAAD,gBAAA,CAAKC,EAAE,IAAG,GAAC,GAAAD,gBAAA,CAAGE,EAAE;2EAEvEL,MAAA,CAAAY,QAAQ,CAACC,MAAM,I,cAA1Bf,mBAAA,CAKM,OAAAgB,UAAA,G,0BAJJf,mBAAA,CAAmB,YAAf,YAAU,qBACdA,mBAAA,CAEK,c,kBADHD,mBAAA,CAA4EU,SAAA,QAAAC,WAAA,CAA5DT,MAAA,CAAAY,QAAQ,EAAbG,CAAC;yBAAZjB,mBAAA,CAA4E;MAAjDa,GAAG,EAAEI,CAAC,CAACX;OAAI,MAAI,GAAAD,gBAAA,CAAGY,CAAC,CAACX,EAAE,IAAG,SAAO,GAAAD,gBAAA,CAAGY,CAAC,CAACT,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}